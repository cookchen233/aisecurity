// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdminsColumns holds the columns for the "admins" table.
	AdminsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "username", Type: field.TypeString, Size: 64},
		{Name: "password", Type: field.TypeString, Size: 255},
		{Name: "name", Type: field.TypeString, Nullable: true, Size: 64},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
	}
	// AdminsTable holds the schema information for the "admins" table.
	AdminsTable = &schema.Table{
		Name:       "admins",
		Columns:    AdminsColumns,
		PrimaryKey: []*schema.Column{AdminsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admins_admins_admin_creator",
				Columns:    []*schema.Column{AdminsColumns[7]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "admins_admins_admin_updator",
				Columns:    []*schema.Column{AdminsColumns[8]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AdminRolesColumns holds the columns for the "admin_roles" table.
	AdminRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Size: 255},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
	}
	// AdminRolesTable holds the schema information for the "admin_roles" table.
	AdminRolesTable = &schema.Table{
		Name:       "admin_roles",
		Columns:    AdminRolesColumns,
		PrimaryKey: []*schema.Column{AdminRolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_roles_admins_admin_role_creator",
				Columns:    []*schema.Column{AdminRolesColumns[5]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "admin_roles_admins_admin_role_updator",
				Columns:    []*schema.Column{AdminRolesColumns[6]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DepartmentsColumns holds the columns for the "departments" table.
	DepartmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString, Size: 255},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "admin_department_updator", Type: field.TypeInt, Nullable: true},
		{Name: "parent_id", Type: field.TypeInt, Nullable: true},
	}
	// DepartmentsTable holds the schema information for the "departments" table.
	DepartmentsTable = &schema.Table{
		Name:       "departments",
		Columns:    DepartmentsColumns,
		PrimaryKey: []*schema.Column{DepartmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "departments_admins_department_creator",
				Columns:    []*schema.Column{DepartmentsColumns[6]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "departments_admins_department_updator",
				Columns:    []*schema.Column{DepartmentsColumns[7]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "departments_departments_children",
				Columns:    []*schema.Column{DepartmentsColumns[8]},
				RefColumns: []*schema.Column{DepartmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EmployeesColumns holds the columns for the "employees" table.
	EmployeesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "admin_employee_updator", Type: field.TypeInt, Nullable: true},
		{Name: "admin_id", Type: field.TypeInt},
		{Name: "department_id", Type: field.TypeInt},
	}
	// EmployeesTable holds the schema information for the "employees" table.
	EmployeesTable = &schema.Table{
		Name:       "employees",
		Columns:    EmployeesColumns,
		PrimaryKey: []*schema.Column{EmployeesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "employees_admins_employee_creator",
				Columns:    []*schema.Column{EmployeesColumns[5]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "employees_admins_employee_updator",
				Columns:    []*schema.Column{EmployeesColumns[6]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "employees_admins_employee_admin",
				Columns:    []*schema.Column{EmployeesColumns[7]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "employees_departments_employee_department",
				Columns:    []*schema.Column{EmployeesColumns[8]},
				RefColumns: []*schema.Column{DepartmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RisksColumns holds the columns for the "risks" table.
	RisksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString, Size: 255},
		{Name: "content", Type: field.TypeString},
		{Name: "images", Type: field.TypeJSON, Nullable: true},
		{Name: "measures", Type: field.TypeString, Nullable: true},
		{Name: "maintain_status", Type: field.TypeInt, Default: 0},
		{Name: "due_time", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "admin_risk_updator", Type: field.TypeInt, Nullable: true},
		{Name: "maintainer", Type: field.TypeInt},
		{Name: "risk_category_id", Type: field.TypeInt},
		{Name: "risk_location_id", Type: field.TypeInt},
	}
	// RisksTable holds the schema information for the "risks" table.
	RisksTable = &schema.Table{
		Name:       "risks",
		Columns:    RisksColumns,
		PrimaryKey: []*schema.Column{RisksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "risks_admins_risk_creator",
				Columns:    []*schema.Column{RisksColumns[11]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "risks_admins_risk_updator",
				Columns:    []*schema.Column{RisksColumns[12]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "risks_admins_risk_maintainer",
				Columns:    []*schema.Column{RisksColumns[13]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "risks_risk_categories_risk_category",
				Columns:    []*schema.Column{RisksColumns[14]},
				RefColumns: []*schema.Column{RiskCategoriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "risks_risk_locations_risk_location",
				Columns:    []*schema.Column{RisksColumns[15]},
				RefColumns: []*schema.Column{RiskLocationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RiskCategoriesColumns holds the columns for the "risk_categories" table.
	RiskCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString, Size: 255},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "admin_risk_category_updator", Type: field.TypeInt, Nullable: true},
	}
	// RiskCategoriesTable holds the schema information for the "risk_categories" table.
	RiskCategoriesTable = &schema.Table{
		Name:       "risk_categories",
		Columns:    RiskCategoriesColumns,
		PrimaryKey: []*schema.Column{RiskCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "risk_categories_admins_risk_category_creator",
				Columns:    []*schema.Column{RiskCategoriesColumns[6]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "risk_categories_admins_risk_category_updator",
				Columns:    []*schema.Column{RiskCategoriesColumns[7]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RiskLocationsColumns holds the columns for the "risk_locations" table.
	RiskLocationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString, Size: 255},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "admin_risk_location_updator", Type: field.TypeInt, Nullable: true},
	}
	// RiskLocationsTable holds the schema information for the "risk_locations" table.
	RiskLocationsTable = &schema.Table{
		Name:       "risk_locations",
		Columns:    RiskLocationsColumns,
		PrimaryKey: []*schema.Column{RiskLocationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "risk_locations_admins_risk_location_creator",
				Columns:    []*schema.Column{RiskLocationsColumns[6]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "risk_locations_admins_risk_location_updator",
				Columns:    []*schema.Column{RiskLocationsColumns[7]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AdminRoleAdminsColumns holds the columns for the "admin_role_admins" table.
	AdminRoleAdminsColumns = []*schema.Column{
		{Name: "admin_role_id", Type: field.TypeInt},
		{Name: "admin_id", Type: field.TypeInt},
	}
	// AdminRoleAdminsTable holds the schema information for the "admin_role_admins" table.
	AdminRoleAdminsTable = &schema.Table{
		Name:       "admin_role_admins",
		Columns:    AdminRoleAdminsColumns,
		PrimaryKey: []*schema.Column{AdminRoleAdminsColumns[0], AdminRoleAdminsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_role_admins_admin_role_id",
				Columns:    []*schema.Column{AdminRoleAdminsColumns[0]},
				RefColumns: []*schema.Column{AdminRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "admin_role_admins_admin_id",
				Columns:    []*schema.Column{AdminRoleAdminsColumns[1]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminsTable,
		AdminRolesTable,
		DepartmentsTable,
		EmployeesTable,
		RisksTable,
		RiskCategoriesTable,
		RiskLocationsTable,
		AdminRoleAdminsTable,
	}
)

func init() {
	AdminsTable.ForeignKeys[0].RefTable = AdminsTable
	AdminsTable.ForeignKeys[1].RefTable = AdminsTable
	AdminRolesTable.ForeignKeys[0].RefTable = AdminsTable
	AdminRolesTable.ForeignKeys[1].RefTable = AdminsTable
	DepartmentsTable.ForeignKeys[0].RefTable = AdminsTable
	DepartmentsTable.ForeignKeys[1].RefTable = AdminsTable
	DepartmentsTable.ForeignKeys[2].RefTable = DepartmentsTable
	EmployeesTable.ForeignKeys[0].RefTable = AdminsTable
	EmployeesTable.ForeignKeys[1].RefTable = AdminsTable
	EmployeesTable.ForeignKeys[2].RefTable = AdminsTable
	EmployeesTable.ForeignKeys[3].RefTable = DepartmentsTable
	RisksTable.ForeignKeys[0].RefTable = AdminsTable
	RisksTable.ForeignKeys[1].RefTable = AdminsTable
	RisksTable.ForeignKeys[2].RefTable = AdminsTable
	RisksTable.ForeignKeys[3].RefTable = RiskCategoriesTable
	RisksTable.ForeignKeys[4].RefTable = RiskLocationsTable
	RiskCategoriesTable.ForeignKeys[0].RefTable = AdminsTable
	RiskCategoriesTable.ForeignKeys[1].RefTable = AdminsTable
	RiskLocationsTable.ForeignKeys[0].RefTable = AdminsTable
	RiskLocationsTable.ForeignKeys[1].RefTable = AdminsTable
	AdminRoleAdminsTable.ForeignKeys[0].RefTable = AdminRolesTable
	AdminRoleAdminsTable.ForeignKeys[1].RefTable = AdminsTable
}
