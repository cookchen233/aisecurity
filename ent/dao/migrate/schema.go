// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdminsColumns holds the columns for the "admins" table.
	AdminsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "username", Type: field.TypeString, Size: 64},
		{Name: "password", Type: field.TypeString, Size: 255},
		{Name: "nickname", Type: field.TypeString, Size: 255},
		{Name: "real_name", Type: field.TypeString, Size: 255},
		{Name: "avatar", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
	}
	// AdminsTable holds the schema information for the "admins" table.
	AdminsTable = &schema.Table{
		Name:       "admins",
		Columns:    AdminsColumns,
		PrimaryKey: []*schema.Column{AdminsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admins_admins_admin_creator",
				Columns:    []*schema.Column{AdminsColumns[9]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "admins_admins_admin_updater",
				Columns:    []*schema.Column{AdminsColumns[10]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AdminRolesColumns holds the columns for the "admin_roles" table.
	AdminRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Size: 255},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
	}
	// AdminRolesTable holds the schema information for the "admin_roles" table.
	AdminRolesTable = &schema.Table{
		Name:       "admin_roles",
		Columns:    AdminRolesColumns,
		PrimaryKey: []*schema.Column{AdminRolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_roles_admins_admin_role_creator",
				Columns:    []*schema.Column{AdminRolesColumns[5]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "admin_roles_admins_admin_role_updater",
				Columns:    []*schema.Column{AdminRolesColumns[6]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AreasColumns holds the columns for the "areas" table.
	AreasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Nullable: true, Size: 255, Default: "未命名区域"},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
	}
	// AreasTable holds the schema information for the "areas" table.
	AreasTable = &schema.Table{
		Name:       "areas",
		Columns:    AreasColumns,
		PrimaryKey: []*schema.Column{AreasColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "areas_admins_area_creator",
				Columns:    []*schema.Column{AreasColumns[6]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "areas_admins_area_updater",
				Columns:    []*schema.Column{AreasColumns[7]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// DepartmentsColumns holds the columns for the "departments" table.
	DepartmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Size: 255},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "parent_id", Type: field.TypeInt, Nullable: true},
	}
	// DepartmentsTable holds the schema information for the "departments" table.
	DepartmentsTable = &schema.Table{
		Name:       "departments",
		Columns:    DepartmentsColumns,
		PrimaryKey: []*schema.Column{DepartmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "departments_admins_department_creator",
				Columns:    []*schema.Column{DepartmentsColumns[5]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "departments_admins_department_updater",
				Columns:    []*schema.Column{DepartmentsColumns[6]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "departments_departments_children",
				Columns:    []*schema.Column{DepartmentsColumns[7]},
				RefColumns: []*schema.Column{DepartmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DevicesColumns holds the columns for the "devices" table.
	DevicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "brand", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "model", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "name", Type: field.TypeString, Nullable: true, Size: 255, Default: "未命名设备"},
		{Name: "sn", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "device_type", Type: field.TypeInt, Default: 0},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
	}
	// DevicesTable holds the schema information for the "devices" table.
	DevicesTable = &schema.Table{
		Name:       "devices",
		Columns:    DevicesColumns,
		PrimaryKey: []*schema.Column{DevicesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "devices_admins_device_creator",
				Columns:    []*schema.Column{DevicesColumns[9]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "devices_admins_device_updater",
				Columns:    []*schema.Column{DevicesColumns[10]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// DeviceInstallationsColumns holds the columns for the "device_installations" table.
	DeviceInstallationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "alias_name", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "longitude", Type: field.TypeFloat64},
		{Name: "latitude", Type: field.TypeFloat64},
		{Name: "location_data", Type: field.TypeString, Nullable: true},
		{Name: "location", Type: field.TypeString, Nullable: true},
		{Name: "installer", Type: field.TypeString, Nullable: true},
		{Name: "install_time", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "area_id", Type: field.TypeInt},
		{Name: "device_id", Type: field.TypeInt},
	}
	// DeviceInstallationsTable holds the schema information for the "device_installations" table.
	DeviceInstallationsTable = &schema.Table{
		Name:       "device_installations",
		Columns:    DeviceInstallationsColumns,
		PrimaryKey: []*schema.Column{DeviceInstallationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "device_installations_admins_device_installation_creator",
				Columns:    []*schema.Column{DeviceInstallationsColumns[11]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "device_installations_admins_device_installation_updater",
				Columns:    []*schema.Column{DeviceInstallationsColumns[12]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "device_installations_areas_device_installation_area",
				Columns:    []*schema.Column{DeviceInstallationsColumns[13]},
				RefColumns: []*schema.Column{AreasColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "device_installations_devices_device_installation_device",
				Columns:    []*schema.Column{DeviceInstallationsColumns[14]},
				RefColumns: []*schema.Column{DevicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// EmployeesColumns holds the columns for the "employees" table.
	EmployeesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "admin_id", Type: field.TypeInt},
		{Name: "department_id", Type: field.TypeInt},
	}
	// EmployeesTable holds the schema information for the "employees" table.
	EmployeesTable = &schema.Table{
		Name:       "employees",
		Columns:    EmployeesColumns,
		PrimaryKey: []*schema.Column{EmployeesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "employees_admins_employee_creator",
				Columns:    []*schema.Column{EmployeesColumns[4]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "employees_admins_employee_updater",
				Columns:    []*schema.Column{EmployeesColumns[5]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "employees_admins_employee",
				Columns:    []*schema.Column{EmployeesColumns[6]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "employees_departments_employees",
				Columns:    []*schema.Column{EmployeesColumns[7]},
				RefColumns: []*schema.Column{DepartmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// EventLevelsColumns holds the columns for the "event_levels" table.
	EventLevelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "event_types", Type: field.TypeJSON},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "is_report", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
	}
	// EventLevelsTable holds the schema information for the "event_levels" table.
	EventLevelsTable = &schema.Table{
		Name:       "event_levels",
		Columns:    EventLevelsColumns,
		PrimaryKey: []*schema.Column{EventLevelsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "event_levels_admins_event_level_creator",
				Columns:    []*schema.Column{EventLevelsColumns[8]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "event_levels_admins_event_level_updater",
				Columns:    []*schema.Column{EventLevelsColumns[9]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// IpcEventsColumns holds the columns for the "ipc_events" table.
	IpcEventsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "event_time", Type: field.TypeTime},
		{Name: "event_type", Type: field.TypeInt, Default: 0},
		{Name: "event_status", Type: field.TypeInt, Default: 1},
		{Name: "images", Type: field.TypeJSON, Nullable: true},
		{Name: "labeled_images", Type: field.TypeJSON, Nullable: true},
		{Name: "event_id", Type: field.TypeString, Size: 255},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "raw_data", Type: field.TypeString, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "device_id", Type: field.TypeInt},
		{Name: "video_id", Type: field.TypeInt, Nullable: true},
	}
	// IpcEventsTable holds the schema information for the "ipc_events" table.
	IpcEventsTable = &schema.Table{
		Name:       "ipc_events",
		Columns:    IpcEventsColumns,
		PrimaryKey: []*schema.Column{IpcEventsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ipc_events_admins_ipc_event_creator",
				Columns:    []*schema.Column{IpcEventsColumns[12]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "ipc_events_admins_ipc_event_updater",
				Columns:    []*schema.Column{IpcEventsColumns[13]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "ipc_events_devices_ipc_event_device",
				Columns:    []*schema.Column{IpcEventsColumns[14]},
				RefColumns: []*schema.Column{DevicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "ipc_events_videos_ipc_event_video",
				Columns:    []*schema.Column{IpcEventsColumns[15]},
				RefColumns: []*schema.Column{VideosColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OccupationsColumns holds the columns for the "occupations" table.
	OccupationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Size: 255},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
	}
	// OccupationsTable holds the schema information for the "occupations" table.
	OccupationsTable = &schema.Table{
		Name:       "occupations",
		Columns:    OccupationsColumns,
		PrimaryKey: []*schema.Column{OccupationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "occupations_admins_occupation_creator",
				Columns:    []*schema.Column{OccupationsColumns[6]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "occupations_admins_occupation_updater",
				Columns:    []*schema.Column{OccupationsColumns[7]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RisksColumns holds the columns for the "risks" table.
	RisksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString, Size: 255},
		{Name: "content", Type: field.TypeString, Nullable: true},
		{Name: "images", Type: field.TypeJSON, Nullable: true},
		{Name: "measures", Type: field.TypeString, Nullable: true},
		{Name: "maintain_status", Type: field.TypeInt, Default: 0},
		{Name: "due_time", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "reporter_id", Type: field.TypeInt},
		{Name: "maintainer_id", Type: field.TypeInt},
		{Name: "risk_category_id", Type: field.TypeInt},
		{Name: "risk_location_id", Type: field.TypeInt},
	}
	// RisksTable holds the schema information for the "risks" table.
	RisksTable = &schema.Table{
		Name:       "risks",
		Columns:    RisksColumns,
		PrimaryKey: []*schema.Column{RisksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "risks_admins_risk_creator",
				Columns:    []*schema.Column{RisksColumns[10]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "risks_admins_risk_updater",
				Columns:    []*schema.Column{RisksColumns[11]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "risks_employees_risk_reporter",
				Columns:    []*schema.Column{RisksColumns[12]},
				RefColumns: []*schema.Column{EmployeesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "risks_employees_risk_maintainer",
				Columns:    []*schema.Column{RisksColumns[13]},
				RefColumns: []*schema.Column{EmployeesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "risks_risk_categories_risk",
				Columns:    []*schema.Column{RisksColumns[14]},
				RefColumns: []*schema.Column{RiskCategoriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "risks_risk_locations_risk",
				Columns:    []*schema.Column{RisksColumns[15]},
				RefColumns: []*schema.Column{RiskLocationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RiskCategoriesColumns holds the columns for the "risk_categories" table.
	RiskCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Size: 255},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
	}
	// RiskCategoriesTable holds the schema information for the "risk_categories" table.
	RiskCategoriesTable = &schema.Table{
		Name:       "risk_categories",
		Columns:    RiskCategoriesColumns,
		PrimaryKey: []*schema.Column{RiskCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "risk_categories_admins_risk_category_creator",
				Columns:    []*schema.Column{RiskCategoriesColumns[5]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "risk_categories_admins_risk_category_updater",
				Columns:    []*schema.Column{RiskCategoriesColumns[6]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RiskLocationsColumns holds the columns for the "risk_locations" table.
	RiskLocationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Size: 255},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
	}
	// RiskLocationsTable holds the schema information for the "risk_locations" table.
	RiskLocationsTable = &schema.Table{
		Name:       "risk_locations",
		Columns:    RiskLocationsColumns,
		PrimaryKey: []*schema.Column{RiskLocationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "risk_locations_admins_risk_location_creator",
				Columns:    []*schema.Column{RiskLocationsColumns[5]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "risk_locations_admins_risk_location_updater",
				Columns:    []*schema.Column{RiskLocationsColumns[6]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// VideosColumns holds the columns for the "videos" table.
	VideosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "url", Type: field.TypeString, Nullable: true},
		{Name: "size", Type: field.TypeInt64, Default: 0},
		{Name: "duration", Type: field.TypeString, Nullable: true},
		{Name: "uploaded_at", Type: field.TypeTime, Nullable: true},
		{Name: "uploaded_at2", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
	}
	// VideosTable holds the schema information for the "videos" table.
	VideosTable = &schema.Table{
		Name:       "videos",
		Columns:    VideosColumns,
		PrimaryKey: []*schema.Column{VideosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "videos_admins_video_creator",
				Columns:    []*schema.Column{VideosColumns[10]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "videos_admins_video_updater",
				Columns:    []*schema.Column{VideosColumns[11]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// AdminRoleAdminsColumns holds the columns for the "admin_role_admins" table.
	AdminRoleAdminsColumns = []*schema.Column{
		{Name: "admin_role_id", Type: field.TypeInt},
		{Name: "admin_id", Type: field.TypeInt},
	}
	// AdminRoleAdminsTable holds the schema information for the "admin_role_admins" table.
	AdminRoleAdminsTable = &schema.Table{
		Name:       "admin_role_admins",
		Columns:    AdminRoleAdminsColumns,
		PrimaryKey: []*schema.Column{AdminRoleAdminsColumns[0], AdminRoleAdminsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_role_admins_admin_role_id",
				Columns:    []*schema.Column{AdminRoleAdminsColumns[0]},
				RefColumns: []*schema.Column{AdminRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "admin_role_admins_admin_id",
				Columns:    []*schema.Column{AdminRoleAdminsColumns[1]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// IpcEventFixersColumns holds the columns for the "ipc_event_fixers" table.
	IpcEventFixersColumns = []*schema.Column{
		{Name: "ipc_event_id", Type: field.TypeInt},
		{Name: "employee_id", Type: field.TypeInt},
	}
	// IpcEventFixersTable holds the schema information for the "ipc_event_fixers" table.
	IpcEventFixersTable = &schema.Table{
		Name:       "ipc_event_fixers",
		Columns:    IpcEventFixersColumns,
		PrimaryKey: []*schema.Column{IpcEventFixersColumns[0], IpcEventFixersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ipc_event_fixers_ipc_event_id",
				Columns:    []*schema.Column{IpcEventFixersColumns[0]},
				RefColumns: []*schema.Column{IpcEventsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "ipc_event_fixers_employee_id",
				Columns:    []*schema.Column{IpcEventFixersColumns[1]},
				RefColumns: []*schema.Column{EmployeesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// OccupationEmployeesColumns holds the columns for the "occupation_employees" table.
	OccupationEmployeesColumns = []*schema.Column{
		{Name: "occupation_id", Type: field.TypeInt},
		{Name: "employee_id", Type: field.TypeInt},
	}
	// OccupationEmployeesTable holds the schema information for the "occupation_employees" table.
	OccupationEmployeesTable = &schema.Table{
		Name:       "occupation_employees",
		Columns:    OccupationEmployeesColumns,
		PrimaryKey: []*schema.Column{OccupationEmployeesColumns[0], OccupationEmployeesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "occupation_employees_occupation_id",
				Columns:    []*schema.Column{OccupationEmployeesColumns[0]},
				RefColumns: []*schema.Column{OccupationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "occupation_employees_employee_id",
				Columns:    []*schema.Column{OccupationEmployeesColumns[1]},
				RefColumns: []*schema.Column{EmployeesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminsTable,
		AdminRolesTable,
		AreasTable,
		DepartmentsTable,
		DevicesTable,
		DeviceInstallationsTable,
		EmployeesTable,
		EventLevelsTable,
		IpcEventsTable,
		OccupationsTable,
		RisksTable,
		RiskCategoriesTable,
		RiskLocationsTable,
		VideosTable,
		AdminRoleAdminsTable,
		IpcEventFixersTable,
		OccupationEmployeesTable,
	}
)

func init() {
	AdminsTable.ForeignKeys[0].RefTable = AdminsTable
	AdminsTable.ForeignKeys[1].RefTable = AdminsTable
	AdminRolesTable.ForeignKeys[0].RefTable = AdminsTable
	AdminRolesTable.ForeignKeys[1].RefTable = AdminsTable
	AreasTable.ForeignKeys[0].RefTable = AdminsTable
	AreasTable.ForeignKeys[1].RefTable = AdminsTable
	DepartmentsTable.ForeignKeys[0].RefTable = AdminsTable
	DepartmentsTable.ForeignKeys[1].RefTable = AdminsTable
	DepartmentsTable.ForeignKeys[2].RefTable = DepartmentsTable
	DevicesTable.ForeignKeys[0].RefTable = AdminsTable
	DevicesTable.ForeignKeys[1].RefTable = AdminsTable
	DeviceInstallationsTable.ForeignKeys[0].RefTable = AdminsTable
	DeviceInstallationsTable.ForeignKeys[1].RefTable = AdminsTable
	DeviceInstallationsTable.ForeignKeys[2].RefTable = AreasTable
	DeviceInstallationsTable.ForeignKeys[3].RefTable = DevicesTable
	EmployeesTable.ForeignKeys[0].RefTable = AdminsTable
	EmployeesTable.ForeignKeys[1].RefTable = AdminsTable
	EmployeesTable.ForeignKeys[2].RefTable = AdminsTable
	EmployeesTable.ForeignKeys[3].RefTable = DepartmentsTable
	EventLevelsTable.ForeignKeys[0].RefTable = AdminsTable
	EventLevelsTable.ForeignKeys[1].RefTable = AdminsTable
	IpcEventsTable.ForeignKeys[0].RefTable = AdminsTable
	IpcEventsTable.ForeignKeys[1].RefTable = AdminsTable
	IpcEventsTable.ForeignKeys[2].RefTable = DevicesTable
	IpcEventsTable.ForeignKeys[3].RefTable = VideosTable
	OccupationsTable.ForeignKeys[0].RefTable = AdminsTable
	OccupationsTable.ForeignKeys[1].RefTable = AdminsTable
	RisksTable.ForeignKeys[0].RefTable = AdminsTable
	RisksTable.ForeignKeys[1].RefTable = AdminsTable
	RisksTable.ForeignKeys[2].RefTable = EmployeesTable
	RisksTable.ForeignKeys[3].RefTable = EmployeesTable
	RisksTable.ForeignKeys[4].RefTable = RiskCategoriesTable
	RisksTable.ForeignKeys[5].RefTable = RiskLocationsTable
	RiskCategoriesTable.ForeignKeys[0].RefTable = AdminsTable
	RiskCategoriesTable.ForeignKeys[1].RefTable = AdminsTable
	RiskLocationsTable.ForeignKeys[0].RefTable = AdminsTable
	RiskLocationsTable.ForeignKeys[1].RefTable = AdminsTable
	VideosTable.ForeignKeys[0].RefTable = AdminsTable
	VideosTable.ForeignKeys[1].RefTable = AdminsTable
	AdminRoleAdminsTable.ForeignKeys[0].RefTable = AdminRolesTable
	AdminRoleAdminsTable.ForeignKeys[1].RefTable = AdminsTable
	IpcEventFixersTable.ForeignKeys[0].RefTable = IpcEventsTable
	IpcEventFixersTable.ForeignKeys[1].RefTable = EmployeesTable
	OccupationEmployeesTable.ForeignKeys[0].RefTable = OccupationsTable
	OccupationEmployeesTable.ForeignKeys[1].RefTable = EmployeesTable
}
