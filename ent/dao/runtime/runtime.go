// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"aisecurity/ent/dao/admin"
	"aisecurity/ent/dao/adminrole"
	"aisecurity/ent/dao/department"
	"aisecurity/ent/dao/employee"
	"aisecurity/ent/dao/ipcreportevent"
	"aisecurity/ent/dao/occupation"
	"aisecurity/ent/dao/risk"
	"aisecurity/ent/dao/riskcategory"
	"aisecurity/ent/dao/risklocation"
	"aisecurity/ent/schema"
	"aisecurity/enums"
	"aisecurity/properties/maintain_status"
	"aisecurity/structs/types"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	adminMixin := schema.Admin{}.Mixin()
	adminMixinHooks0 := adminMixin[0].Hooks()
	admin.Hooks[0] = adminMixinHooks0[0]
	adminMixinFields0 := adminMixin[0].Fields()
	_ = adminMixinFields0
	adminFields := schema.Admin{}.Fields()
	_ = adminFields
	// adminDescCreatedAt is the schema descriptor for created_at field.
	adminDescCreatedAt := adminMixinFields0[0].Descriptor()
	// admin.DefaultCreatedAt holds the default value on creation for the created_at field.
	admin.DefaultCreatedAt = adminDescCreatedAt.Default.(func() time.Time)
	// adminDescCreatedBy is the schema descriptor for created_by field.
	adminDescCreatedBy := adminMixinFields0[1].Descriptor()
	// admin.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	admin.CreatedByValidator = adminDescCreatedBy.Validators[0].(func(int) error)
	// adminDescUpdatedBy is the schema descriptor for updated_by field.
	adminDescUpdatedBy := adminMixinFields0[3].Descriptor()
	// admin.UpdatedByValidator is a validator for the "updated_by" field. It is called by the builders before save.
	admin.UpdatedByValidator = adminDescUpdatedBy.Validators[0].(func(int) error)
	// adminDescUpdatedAt is the schema descriptor for updated_at field.
	adminDescUpdatedAt := adminMixinFields0[4].Descriptor()
	// admin.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	admin.DefaultUpdatedAt = adminDescUpdatedAt.Default.(func() time.Time)
	// admin.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	admin.UpdateDefaultUpdatedAt = adminDescUpdatedAt.UpdateDefault.(func() time.Time)
	// adminDescUsername is the schema descriptor for username field.
	adminDescUsername := adminFields[0].Descriptor()
	// admin.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	admin.UsernameValidator = func() func(string) error {
		validators := adminDescUsername.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(username string) error {
			for _, fn := range fns {
				if err := fn(username); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// adminDescPassword is the schema descriptor for password field.
	adminDescPassword := adminFields[1].Descriptor()
	// admin.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	admin.PasswordValidator = func() func(string) error {
		validators := adminDescPassword.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(password string) error {
			for _, fn := range fns {
				if err := fn(password); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// adminDescNickname is the schema descriptor for nickname field.
	adminDescNickname := adminFields[2].Descriptor()
	// admin.NicknameValidator is a validator for the "nickname" field. It is called by the builders before save.
	admin.NicknameValidator = func() func(string) error {
		validators := adminDescNickname.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(nickname string) error {
			for _, fn := range fns {
				if err := fn(nickname); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// adminDescRealName is the schema descriptor for real_name field.
	adminDescRealName := adminFields[3].Descriptor()
	// admin.RealNameValidator is a validator for the "real_name" field. It is called by the builders before save.
	admin.RealNameValidator = adminDescRealName.Validators[0].(func(string) error)
	// adminDescAvatar is the schema descriptor for avatar field.
	adminDescAvatar := adminFields[4].Descriptor()
	// admin.AvatarValidator is a validator for the "avatar" field. It is called by the builders before save.
	admin.AvatarValidator = adminDescAvatar.Validators[0].(func(string) error)
	adminroleFields := schema.AdminRole{}.Fields()
	_ = adminroleFields
	// adminroleDescCreatedAt is the schema descriptor for created_at field.
	adminroleDescCreatedAt := adminroleFields[0].Descriptor()
	// adminrole.DefaultCreatedAt holds the default value on creation for the created_at field.
	adminrole.DefaultCreatedAt = adminroleDescCreatedAt.Default.(func() time.Time)
	// adminroleDescCreatedBy is the schema descriptor for created_by field.
	adminroleDescCreatedBy := adminroleFields[1].Descriptor()
	// adminrole.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	adminrole.CreatedByValidator = adminroleDescCreatedBy.Validators[0].(func(int) error)
	// adminroleDescName is the schema descriptor for name field.
	adminroleDescName := adminroleFields[2].Descriptor()
	// adminrole.NameValidator is a validator for the "name" field. It is called by the builders before save.
	adminrole.NameValidator = func() func(string) error {
		validators := adminroleDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// adminroleDescUpdatedBy is the schema descriptor for updated_by field.
	adminroleDescUpdatedBy := adminroleFields[4].Descriptor()
	// adminrole.UpdatedByValidator is a validator for the "updated_by" field. It is called by the builders before save.
	adminrole.UpdatedByValidator = adminroleDescUpdatedBy.Validators[0].(func(int) error)
	// adminroleDescUpdatedAt is the schema descriptor for updated_at field.
	adminroleDescUpdatedAt := adminroleFields[5].Descriptor()
	// adminrole.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	adminrole.DefaultUpdatedAt = adminroleDescUpdatedAt.Default.(func() time.Time)
	// adminrole.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	adminrole.UpdateDefaultUpdatedAt = adminroleDescUpdatedAt.UpdateDefault.(func() time.Time)
	departmentMixin := schema.Department{}.Mixin()
	departmentMixinHooks0 := departmentMixin[0].Hooks()
	department.Hooks[0] = departmentMixinHooks0[0]
	departmentMixinFields0 := departmentMixin[0].Fields()
	_ = departmentMixinFields0
	departmentFields := schema.Department{}.Fields()
	_ = departmentFields
	// departmentDescCreatedAt is the schema descriptor for created_at field.
	departmentDescCreatedAt := departmentMixinFields0[0].Descriptor()
	// department.DefaultCreatedAt holds the default value on creation for the created_at field.
	department.DefaultCreatedAt = departmentDescCreatedAt.Default.(func() time.Time)
	// departmentDescCreatedBy is the schema descriptor for created_by field.
	departmentDescCreatedBy := departmentMixinFields0[1].Descriptor()
	// department.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	department.CreatedByValidator = departmentDescCreatedBy.Validators[0].(func(int) error)
	// departmentDescUpdatedBy is the schema descriptor for updated_by field.
	departmentDescUpdatedBy := departmentMixinFields0[3].Descriptor()
	// department.UpdatedByValidator is a validator for the "updated_by" field. It is called by the builders before save.
	department.UpdatedByValidator = departmentDescUpdatedBy.Validators[0].(func(int) error)
	// departmentDescUpdatedAt is the schema descriptor for updated_at field.
	departmentDescUpdatedAt := departmentMixinFields0[4].Descriptor()
	// department.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	department.DefaultUpdatedAt = departmentDescUpdatedAt.Default.(func() time.Time)
	// department.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	department.UpdateDefaultUpdatedAt = departmentDescUpdatedAt.UpdateDefault.(func() time.Time)
	// departmentDescName is the schema descriptor for name field.
	departmentDescName := departmentFields[0].Descriptor()
	// department.NameValidator is a validator for the "name" field. It is called by the builders before save.
	department.NameValidator = func() func(string) error {
		validators := departmentDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// departmentDescParentID is the schema descriptor for parent_id field.
	departmentDescParentID := departmentFields[1].Descriptor()
	// department.ParentIDValidator is a validator for the "parent_id" field. It is called by the builders before save.
	department.ParentIDValidator = departmentDescParentID.Validators[0].(func(int) error)
	employeeMixin := schema.Employee{}.Mixin()
	employeeMixinHooks0 := employeeMixin[0].Hooks()
	employee.Hooks[0] = employeeMixinHooks0[0]
	employeeMixinFields0 := employeeMixin[0].Fields()
	_ = employeeMixinFields0
	employeeFields := schema.Employee{}.Fields()
	_ = employeeFields
	// employeeDescCreatedAt is the schema descriptor for created_at field.
	employeeDescCreatedAt := employeeMixinFields0[0].Descriptor()
	// employee.DefaultCreatedAt holds the default value on creation for the created_at field.
	employee.DefaultCreatedAt = employeeDescCreatedAt.Default.(func() time.Time)
	// employeeDescCreatedBy is the schema descriptor for created_by field.
	employeeDescCreatedBy := employeeMixinFields0[1].Descriptor()
	// employee.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	employee.CreatedByValidator = employeeDescCreatedBy.Validators[0].(func(int) error)
	// employeeDescUpdatedBy is the schema descriptor for updated_by field.
	employeeDescUpdatedBy := employeeMixinFields0[3].Descriptor()
	// employee.UpdatedByValidator is a validator for the "updated_by" field. It is called by the builders before save.
	employee.UpdatedByValidator = employeeDescUpdatedBy.Validators[0].(func(int) error)
	// employeeDescUpdatedAt is the schema descriptor for updated_at field.
	employeeDescUpdatedAt := employeeMixinFields0[4].Descriptor()
	// employee.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	employee.DefaultUpdatedAt = employeeDescUpdatedAt.Default.(func() time.Time)
	// employee.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	employee.UpdateDefaultUpdatedAt = employeeDescUpdatedAt.UpdateDefault.(func() time.Time)
	// employeeDescAdminID is the schema descriptor for admin_id field.
	employeeDescAdminID := employeeFields[0].Descriptor()
	// employee.AdminIDValidator is a validator for the "admin_id" field. It is called by the builders before save.
	employee.AdminIDValidator = employeeDescAdminID.Validators[0].(func(int) error)
	// employeeDescDepartmentID is the schema descriptor for department_id field.
	employeeDescDepartmentID := employeeFields[1].Descriptor()
	// employee.DepartmentIDValidator is a validator for the "department_id" field. It is called by the builders before save.
	employee.DepartmentIDValidator = employeeDescDepartmentID.Validators[0].(func(int) error)
	ipcreporteventMixin := schema.IPCReportEvent{}.Mixin()
	ipcreporteventMixinHooks0 := ipcreporteventMixin[0].Hooks()
	ipcreportevent.Hooks[0] = ipcreporteventMixinHooks0[0]
	ipcreporteventMixinFields0 := ipcreporteventMixin[0].Fields()
	_ = ipcreporteventMixinFields0
	ipcreporteventFields := schema.IPCReportEvent{}.Fields()
	_ = ipcreporteventFields
	// ipcreporteventDescCreatedAt is the schema descriptor for created_at field.
	ipcreporteventDescCreatedAt := ipcreporteventMixinFields0[0].Descriptor()
	// ipcreportevent.DefaultCreatedAt holds the default value on creation for the created_at field.
	ipcreportevent.DefaultCreatedAt = ipcreporteventDescCreatedAt.Default.(func() time.Time)
	// ipcreporteventDescCreatedBy is the schema descriptor for created_by field.
	ipcreporteventDescCreatedBy := ipcreporteventMixinFields0[1].Descriptor()
	// ipcreportevent.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	ipcreportevent.CreatedByValidator = ipcreporteventDescCreatedBy.Validators[0].(func(int) error)
	// ipcreporteventDescUpdatedBy is the schema descriptor for updated_by field.
	ipcreporteventDescUpdatedBy := ipcreporteventMixinFields0[3].Descriptor()
	// ipcreportevent.UpdatedByValidator is a validator for the "updated_by" field. It is called by the builders before save.
	ipcreportevent.UpdatedByValidator = ipcreporteventDescUpdatedBy.Validators[0].(func(int) error)
	// ipcreporteventDescUpdatedAt is the schema descriptor for updated_at field.
	ipcreporteventDescUpdatedAt := ipcreporteventMixinFields0[4].Descriptor()
	// ipcreportevent.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	ipcreportevent.DefaultUpdatedAt = ipcreporteventDescUpdatedAt.Default.(func() time.Time)
	// ipcreportevent.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	ipcreportevent.UpdateDefaultUpdatedAt = ipcreporteventDescUpdatedAt.UpdateDefault.(func() time.Time)
	// ipcreporteventDescDeviceID is the schema descriptor for device_id field.
	ipcreporteventDescDeviceID := ipcreporteventFields[0].Descriptor()
	// ipcreportevent.DeviceIDValidator is a validator for the "device_id" field. It is called by the builders before save.
	ipcreportevent.DeviceIDValidator = ipcreporteventDescDeviceID.Validators[0].(func(string) error)
	// ipcreporteventDescEventID is the schema descriptor for event_id field.
	ipcreporteventDescEventID := ipcreporteventFields[1].Descriptor()
	// ipcreportevent.EventIDValidator is a validator for the "event_id" field. It is called by the builders before save.
	ipcreportevent.EventIDValidator = ipcreporteventDescEventID.Validators[0].(func(string) error)
	// ipcreporteventDescEventTime is the schema descriptor for event_time field.
	ipcreporteventDescEventTime := ipcreporteventFields[2].Descriptor()
	// ipcreportevent.DefaultEventTime holds the default value on creation for the event_time field.
	ipcreportevent.DefaultEventTime = ipcreporteventDescEventTime.Default.(func() time.Time)
	// ipcreporteventDescEventType is the schema descriptor for event_type field.
	ipcreporteventDescEventType := ipcreporteventFields[3].Descriptor()
	// ipcreportevent.DefaultEventType holds the default value on creation for the event_type field.
	ipcreportevent.DefaultEventType = enums.IPCReportEventType(ipcreporteventDescEventType.Default.(int))
	// ipcreportevent.EventTypeValidator is a validator for the "event_type" field. It is called by the builders before save.
	ipcreportevent.EventTypeValidator = ipcreporteventDescEventType.Validators[0].(func(int) error)
	// ipcreporteventDescEventStatus is the schema descriptor for event_status field.
	ipcreporteventDescEventStatus := ipcreporteventFields[4].Descriptor()
	// ipcreportevent.DefaultEventStatus holds the default value on creation for the event_status field.
	ipcreportevent.DefaultEventStatus = enums.IPCReportEventStatus(ipcreporteventDescEventStatus.Default.(int))
	// ipcreportevent.EventStatusValidator is a validator for the "event_status" field. It is called by the builders before save.
	ipcreportevent.EventStatusValidator = ipcreporteventDescEventStatus.Validators[0].(func(int) error)
	// ipcreporteventDescImages is the schema descriptor for images field.
	ipcreporteventDescImages := ipcreporteventFields[5].Descriptor()
	// ipcreportevent.DefaultImages holds the default value on creation for the images field.
	ipcreportevent.DefaultImages = ipcreporteventDescImages.Default.([]types.UploadedImage)
	// ipcreporteventDescLabeledImages is the schema descriptor for labeled_images field.
	ipcreporteventDescLabeledImages := ipcreporteventFields[6].Descriptor()
	// ipcreportevent.DefaultLabeledImages holds the default value on creation for the labeled_images field.
	ipcreportevent.DefaultLabeledImages = ipcreporteventDescLabeledImages.Default.([]types.UploadedImage)
	// ipcreporteventDescVideos is the schema descriptor for videos field.
	ipcreporteventDescVideos := ipcreporteventFields[7].Descriptor()
	// ipcreportevent.DefaultVideos holds the default value on creation for the videos field.
	ipcreportevent.DefaultVideos = ipcreporteventDescVideos.Default.([]types.UploadedVideo)
	occupationMixin := schema.Occupation{}.Mixin()
	occupationMixinHooks0 := occupationMixin[0].Hooks()
	occupation.Hooks[0] = occupationMixinHooks0[0]
	occupationMixinFields0 := occupationMixin[0].Fields()
	_ = occupationMixinFields0
	occupationFields := schema.Occupation{}.Fields()
	_ = occupationFields
	// occupationDescCreatedAt is the schema descriptor for created_at field.
	occupationDescCreatedAt := occupationMixinFields0[0].Descriptor()
	// occupation.DefaultCreatedAt holds the default value on creation for the created_at field.
	occupation.DefaultCreatedAt = occupationDescCreatedAt.Default.(func() time.Time)
	// occupationDescCreatedBy is the schema descriptor for created_by field.
	occupationDescCreatedBy := occupationMixinFields0[1].Descriptor()
	// occupation.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	occupation.CreatedByValidator = occupationDescCreatedBy.Validators[0].(func(int) error)
	// occupationDescUpdatedBy is the schema descriptor for updated_by field.
	occupationDescUpdatedBy := occupationMixinFields0[3].Descriptor()
	// occupation.UpdatedByValidator is a validator for the "updated_by" field. It is called by the builders before save.
	occupation.UpdatedByValidator = occupationDescUpdatedBy.Validators[0].(func(int) error)
	// occupationDescUpdatedAt is the schema descriptor for updated_at field.
	occupationDescUpdatedAt := occupationMixinFields0[4].Descriptor()
	// occupation.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	occupation.DefaultUpdatedAt = occupationDescUpdatedAt.Default.(func() time.Time)
	// occupation.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	occupation.UpdateDefaultUpdatedAt = occupationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// occupationDescName is the schema descriptor for name field.
	occupationDescName := occupationFields[0].Descriptor()
	// occupation.NameValidator is a validator for the "name" field. It is called by the builders before save.
	occupation.NameValidator = func() func(string) error {
		validators := occupationDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	riskMixin := schema.Risk{}.Mixin()
	riskMixinHooks0 := riskMixin[0].Hooks()
	risk.Hooks[0] = riskMixinHooks0[0]
	riskMixinFields0 := riskMixin[0].Fields()
	_ = riskMixinFields0
	riskFields := schema.Risk{}.Fields()
	_ = riskFields
	// riskDescCreatedAt is the schema descriptor for created_at field.
	riskDescCreatedAt := riskMixinFields0[0].Descriptor()
	// risk.DefaultCreatedAt holds the default value on creation for the created_at field.
	risk.DefaultCreatedAt = riskDescCreatedAt.Default.(func() time.Time)
	// riskDescCreatedBy is the schema descriptor for created_by field.
	riskDescCreatedBy := riskMixinFields0[1].Descriptor()
	// risk.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	risk.CreatedByValidator = riskDescCreatedBy.Validators[0].(func(int) error)
	// riskDescUpdatedBy is the schema descriptor for updated_by field.
	riskDescUpdatedBy := riskMixinFields0[3].Descriptor()
	// risk.UpdatedByValidator is a validator for the "updated_by" field. It is called by the builders before save.
	risk.UpdatedByValidator = riskDescUpdatedBy.Validators[0].(func(int) error)
	// riskDescUpdatedAt is the schema descriptor for updated_at field.
	riskDescUpdatedAt := riskMixinFields0[4].Descriptor()
	// risk.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	risk.DefaultUpdatedAt = riskDescUpdatedAt.Default.(func() time.Time)
	// risk.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	risk.UpdateDefaultUpdatedAt = riskDescUpdatedAt.UpdateDefault.(func() time.Time)
	// riskDescTitle is the schema descriptor for title field.
	riskDescTitle := riskFields[0].Descriptor()
	// risk.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	risk.TitleValidator = func() func(string) error {
		validators := riskDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// riskDescImages is the schema descriptor for images field.
	riskDescImages := riskFields[2].Descriptor()
	// risk.DefaultImages holds the default value on creation for the images field.
	risk.DefaultImages = riskDescImages.Default.([]types.UploadedImage)
	// riskDescRiskCategoryID is the schema descriptor for risk_category_id field.
	riskDescRiskCategoryID := riskFields[3].Descriptor()
	// risk.RiskCategoryIDValidator is a validator for the "risk_category_id" field. It is called by the builders before save.
	risk.RiskCategoryIDValidator = riskDescRiskCategoryID.Validators[0].(func(int) error)
	// riskDescRiskLocationID is the schema descriptor for risk_location_id field.
	riskDescRiskLocationID := riskFields[4].Descriptor()
	// risk.RiskLocationIDValidator is a validator for the "risk_location_id" field. It is called by the builders before save.
	risk.RiskLocationIDValidator = riskDescRiskLocationID.Validators[0].(func(int) error)
	// riskDescReporterID is the schema descriptor for reporter_id field.
	riskDescReporterID := riskFields[5].Descriptor()
	// risk.ReporterIDValidator is a validator for the "reporter_id" field. It is called by the builders before save.
	risk.ReporterIDValidator = riskDescReporterID.Validators[0].(func(int) error)
	// riskDescMaintainerID is the schema descriptor for maintainer_id field.
	riskDescMaintainerID := riskFields[6].Descriptor()
	// risk.MaintainerIDValidator is a validator for the "maintainer_id" field. It is called by the builders before save.
	risk.MaintainerIDValidator = riskDescMaintainerID.Validators[0].(func(int) error)
	// riskDescMaintainStatus is the schema descriptor for maintain_status field.
	riskDescMaintainStatus := riskFields[8].Descriptor()
	// risk.DefaultMaintainStatus holds the default value on creation for the maintain_status field.
	risk.DefaultMaintainStatus = maintain_status.MaintainStatus(riskDescMaintainStatus.Default.(int))
	// risk.MaintainStatusValidator is a validator for the "maintain_status" field. It is called by the builders before save.
	risk.MaintainStatusValidator = riskDescMaintainStatus.Validators[0].(func(int) error)
	riskcategoryMixin := schema.RiskCategory{}.Mixin()
	riskcategoryMixinHooks0 := riskcategoryMixin[0].Hooks()
	riskcategory.Hooks[0] = riskcategoryMixinHooks0[0]
	riskcategoryMixinFields0 := riskcategoryMixin[0].Fields()
	_ = riskcategoryMixinFields0
	riskcategoryFields := schema.RiskCategory{}.Fields()
	_ = riskcategoryFields
	// riskcategoryDescCreatedAt is the schema descriptor for created_at field.
	riskcategoryDescCreatedAt := riskcategoryMixinFields0[0].Descriptor()
	// riskcategory.DefaultCreatedAt holds the default value on creation for the created_at field.
	riskcategory.DefaultCreatedAt = riskcategoryDescCreatedAt.Default.(func() time.Time)
	// riskcategoryDescCreatedBy is the schema descriptor for created_by field.
	riskcategoryDescCreatedBy := riskcategoryMixinFields0[1].Descriptor()
	// riskcategory.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	riskcategory.CreatedByValidator = riskcategoryDescCreatedBy.Validators[0].(func(int) error)
	// riskcategoryDescUpdatedBy is the schema descriptor for updated_by field.
	riskcategoryDescUpdatedBy := riskcategoryMixinFields0[3].Descriptor()
	// riskcategory.UpdatedByValidator is a validator for the "updated_by" field. It is called by the builders before save.
	riskcategory.UpdatedByValidator = riskcategoryDescUpdatedBy.Validators[0].(func(int) error)
	// riskcategoryDescUpdatedAt is the schema descriptor for updated_at field.
	riskcategoryDescUpdatedAt := riskcategoryMixinFields0[4].Descriptor()
	// riskcategory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	riskcategory.DefaultUpdatedAt = riskcategoryDescUpdatedAt.Default.(func() time.Time)
	// riskcategory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	riskcategory.UpdateDefaultUpdatedAt = riskcategoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// riskcategoryDescName is the schema descriptor for name field.
	riskcategoryDescName := riskcategoryFields[0].Descriptor()
	// riskcategory.NameValidator is a validator for the "name" field. It is called by the builders before save.
	riskcategory.NameValidator = func() func(string) error {
		validators := riskcategoryDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	risklocationMixin := schema.RiskLocation{}.Mixin()
	risklocationMixinHooks0 := risklocationMixin[0].Hooks()
	risklocation.Hooks[0] = risklocationMixinHooks0[0]
	risklocationMixinFields0 := risklocationMixin[0].Fields()
	_ = risklocationMixinFields0
	risklocationFields := schema.RiskLocation{}.Fields()
	_ = risklocationFields
	// risklocationDescCreatedAt is the schema descriptor for created_at field.
	risklocationDescCreatedAt := risklocationMixinFields0[0].Descriptor()
	// risklocation.DefaultCreatedAt holds the default value on creation for the created_at field.
	risklocation.DefaultCreatedAt = risklocationDescCreatedAt.Default.(func() time.Time)
	// risklocationDescCreatedBy is the schema descriptor for created_by field.
	risklocationDescCreatedBy := risklocationMixinFields0[1].Descriptor()
	// risklocation.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	risklocation.CreatedByValidator = risklocationDescCreatedBy.Validators[0].(func(int) error)
	// risklocationDescUpdatedBy is the schema descriptor for updated_by field.
	risklocationDescUpdatedBy := risklocationMixinFields0[3].Descriptor()
	// risklocation.UpdatedByValidator is a validator for the "updated_by" field. It is called by the builders before save.
	risklocation.UpdatedByValidator = risklocationDescUpdatedBy.Validators[0].(func(int) error)
	// risklocationDescUpdatedAt is the schema descriptor for updated_at field.
	risklocationDescUpdatedAt := risklocationMixinFields0[4].Descriptor()
	// risklocation.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	risklocation.DefaultUpdatedAt = risklocationDescUpdatedAt.Default.(func() time.Time)
	// risklocation.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	risklocation.UpdateDefaultUpdatedAt = risklocationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// risklocationDescName is the schema descriptor for name field.
	risklocationDescName := risklocationFields[0].Descriptor()
	// risklocation.NameValidator is a validator for the "name" field. It is called by the builders before save.
	risklocation.NameValidator = func() func(string) error {
		validators := risklocationDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
}

const (
	Version = "v0.12.5"                                         // Version of ent codegen.
	Sum     = "h1:KREM5E4CSoej4zeGa88Ou/gfturAnpUv0mzAjch1sj4=" // Sum of ent codegen.
)
