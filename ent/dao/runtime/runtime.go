// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"aisecurity/ent/dao/admin"
	"aisecurity/ent/dao/area"
	"aisecurity/ent/dao/department"
	"aisecurity/ent/dao/device"
	"aisecurity/ent/dao/deviceinstallation"
	"aisecurity/ent/dao/employee"
	"aisecurity/ent/dao/event"
	"aisecurity/ent/dao/eventlevel"
	"aisecurity/ent/dao/eventlog"
	"aisecurity/ent/dao/fixing"
	"aisecurity/ent/dao/occupation"
	"aisecurity/ent/dao/permission"
	"aisecurity/ent/dao/risk"
	"aisecurity/ent/dao/riskcategory"
	"aisecurity/ent/dao/risklocation"
	"aisecurity/ent/dao/sweep"
	"aisecurity/ent/dao/sweepresult"
	"aisecurity/ent/dao/sweepresultdetails"
	"aisecurity/ent/dao/sweepschedule"
	"aisecurity/ent/dao/user"
	"aisecurity/ent/dao/video"
	"aisecurity/ent/schema"
	"aisecurity/enums"
	"aisecurity/properties/maintain_status"
	"aisecurity/structs/types"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	adminMixin := schema.Admin{}.Mixin()
	adminMixinHooks0 := adminMixin[0].Hooks()
	admin.Hooks[0] = adminMixinHooks0[0]
	adminMixinFields0 := adminMixin[0].Fields()
	_ = adminMixinFields0
	adminFields := schema.Admin{}.Fields()
	_ = adminFields
	// adminDescCreateTime is the schema descriptor for create_time field.
	adminDescCreateTime := adminMixinFields0[0].Descriptor()
	// admin.DefaultCreateTime holds the default value on creation for the create_time field.
	admin.DefaultCreateTime = adminDescCreateTime.Default.(func() time.Time)
	// adminDescCreatorID is the schema descriptor for creator_id field.
	adminDescCreatorID := adminMixinFields0[1].Descriptor()
	// admin.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	admin.CreatorIDValidator = adminDescCreatorID.Validators[0].(func(int) error)
	// adminDescUpdaterID is the schema descriptor for updater_id field.
	adminDescUpdaterID := adminMixinFields0[3].Descriptor()
	// admin.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	admin.UpdaterIDValidator = adminDescUpdaterID.Validators[0].(func(int) error)
	// adminDescUpdateTime is the schema descriptor for update_time field.
	adminDescUpdateTime := adminMixinFields0[4].Descriptor()
	// admin.DefaultUpdateTime holds the default value on creation for the update_time field.
	admin.DefaultUpdateTime = adminDescUpdateTime.Default.(func() time.Time)
	// admin.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	admin.UpdateDefaultUpdateTime = adminDescUpdateTime.UpdateDefault.(func() time.Time)
	// adminDescUsername is the schema descriptor for username field.
	adminDescUsername := adminFields[0].Descriptor()
	// admin.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	admin.UsernameValidator = func() func(string) error {
		validators := adminDescUsername.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(username string) error {
			for _, fn := range fns {
				if err := fn(username); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// adminDescPassword is the schema descriptor for password field.
	adminDescPassword := adminFields[1].Descriptor()
	// admin.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	admin.PasswordValidator = func() func(string) error {
		validators := adminDescPassword.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(password string) error {
			for _, fn := range fns {
				if err := fn(password); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// adminDescNickname is the schema descriptor for nickname field.
	adminDescNickname := adminFields[2].Descriptor()
	// admin.NicknameValidator is a validator for the "nickname" field. It is called by the builders before save.
	admin.NicknameValidator = adminDescNickname.Validators[0].(func(string) error)
	// adminDescRealName is the schema descriptor for real_name field.
	adminDescRealName := adminFields[3].Descriptor()
	// admin.RealNameValidator is a validator for the "real_name" field. It is called by the builders before save.
	admin.RealNameValidator = adminDescRealName.Validators[0].(func(string) error)
	// adminDescMobile is the schema descriptor for mobile field.
	adminDescMobile := adminFields[4].Descriptor()
	// admin.MobileValidator is a validator for the "mobile" field. It is called by the builders before save.
	admin.MobileValidator = adminDescMobile.Validators[0].(func(string) error)
	// adminDescWechatOpenid is the schema descriptor for wechat_openid field.
	adminDescWechatOpenid := adminFields[5].Descriptor()
	// admin.WechatOpenidValidator is a validator for the "wechat_openid" field. It is called by the builders before save.
	admin.WechatOpenidValidator = adminDescWechatOpenid.Validators[0].(func(string) error)
	// adminDescAdminStatus is the schema descriptor for admin_status field.
	adminDescAdminStatus := adminFields[7].Descriptor()
	// admin.DefaultAdminStatus holds the default value on creation for the admin_status field.
	admin.DefaultAdminStatus = enums.EnabledStatus(adminDescAdminStatus.Default.(int))
	// admin.AdminStatusValidator is a validator for the "admin_status" field. It is called by the builders before save.
	admin.AdminStatusValidator = adminDescAdminStatus.Validators[0].(func(int) error)
	areaMixin := schema.Area{}.Mixin()
	areaMixinHooks0 := areaMixin[0].Hooks()
	area.Hooks[0] = areaMixinHooks0[0]
	areaMixinFields0 := areaMixin[0].Fields()
	_ = areaMixinFields0
	areaFields := schema.Area{}.Fields()
	_ = areaFields
	// areaDescCreateTime is the schema descriptor for create_time field.
	areaDescCreateTime := areaMixinFields0[0].Descriptor()
	// area.DefaultCreateTime holds the default value on creation for the create_time field.
	area.DefaultCreateTime = areaDescCreateTime.Default.(func() time.Time)
	// areaDescCreatorID is the schema descriptor for creator_id field.
	areaDescCreatorID := areaMixinFields0[1].Descriptor()
	// area.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	area.CreatorIDValidator = areaDescCreatorID.Validators[0].(func(int) error)
	// areaDescUpdaterID is the schema descriptor for updater_id field.
	areaDescUpdaterID := areaMixinFields0[3].Descriptor()
	// area.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	area.UpdaterIDValidator = areaDescUpdaterID.Validators[0].(func(int) error)
	// areaDescUpdateTime is the schema descriptor for update_time field.
	areaDescUpdateTime := areaMixinFields0[4].Descriptor()
	// area.DefaultUpdateTime holds the default value on creation for the update_time field.
	area.DefaultUpdateTime = areaDescUpdateTime.Default.(func() time.Time)
	// area.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	area.UpdateDefaultUpdateTime = areaDescUpdateTime.UpdateDefault.(func() time.Time)
	// areaDescName is the schema descriptor for name field.
	areaDescName := areaFields[0].Descriptor()
	// area.DefaultName holds the default value on creation for the name field.
	area.DefaultName = areaDescName.Default.(string)
	// area.NameValidator is a validator for the "name" field. It is called by the builders before save.
	area.NameValidator = areaDescName.Validators[0].(func(string) error)
	departmentMixin := schema.Department{}.Mixin()
	departmentMixinHooks0 := departmentMixin[0].Hooks()
	department.Hooks[0] = departmentMixinHooks0[0]
	departmentMixinFields0 := departmentMixin[0].Fields()
	_ = departmentMixinFields0
	departmentFields := schema.Department{}.Fields()
	_ = departmentFields
	// departmentDescCreateTime is the schema descriptor for create_time field.
	departmentDescCreateTime := departmentMixinFields0[0].Descriptor()
	// department.DefaultCreateTime holds the default value on creation for the create_time field.
	department.DefaultCreateTime = departmentDescCreateTime.Default.(func() time.Time)
	// departmentDescCreatorID is the schema descriptor for creator_id field.
	departmentDescCreatorID := departmentMixinFields0[1].Descriptor()
	// department.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	department.CreatorIDValidator = departmentDescCreatorID.Validators[0].(func(int) error)
	// departmentDescUpdaterID is the schema descriptor for updater_id field.
	departmentDescUpdaterID := departmentMixinFields0[3].Descriptor()
	// department.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	department.UpdaterIDValidator = departmentDescUpdaterID.Validators[0].(func(int) error)
	// departmentDescUpdateTime is the schema descriptor for update_time field.
	departmentDescUpdateTime := departmentMixinFields0[4].Descriptor()
	// department.DefaultUpdateTime holds the default value on creation for the update_time field.
	department.DefaultUpdateTime = departmentDescUpdateTime.Default.(func() time.Time)
	// department.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	department.UpdateDefaultUpdateTime = departmentDescUpdateTime.UpdateDefault.(func() time.Time)
	// departmentDescName is the schema descriptor for name field.
	departmentDescName := departmentFields[0].Descriptor()
	// department.NameValidator is a validator for the "name" field. It is called by the builders before save.
	department.NameValidator = func() func(string) error {
		validators := departmentDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// departmentDescParentID is the schema descriptor for parent_id field.
	departmentDescParentID := departmentFields[1].Descriptor()
	// department.ParentIDValidator is a validator for the "parent_id" field. It is called by the builders before save.
	department.ParentIDValidator = departmentDescParentID.Validators[0].(func(int) error)
	deviceMixin := schema.Device{}.Mixin()
	deviceMixinHooks0 := deviceMixin[0].Hooks()
	device.Hooks[0] = deviceMixinHooks0[0]
	deviceMixinFields0 := deviceMixin[0].Fields()
	_ = deviceMixinFields0
	deviceFields := schema.Device{}.Fields()
	_ = deviceFields
	// deviceDescCreateTime is the schema descriptor for create_time field.
	deviceDescCreateTime := deviceMixinFields0[0].Descriptor()
	// device.DefaultCreateTime holds the default value on creation for the create_time field.
	device.DefaultCreateTime = deviceDescCreateTime.Default.(func() time.Time)
	// deviceDescCreatorID is the schema descriptor for creator_id field.
	deviceDescCreatorID := deviceMixinFields0[1].Descriptor()
	// device.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	device.CreatorIDValidator = deviceDescCreatorID.Validators[0].(func(int) error)
	// deviceDescUpdaterID is the schema descriptor for updater_id field.
	deviceDescUpdaterID := deviceMixinFields0[3].Descriptor()
	// device.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	device.UpdaterIDValidator = deviceDescUpdaterID.Validators[0].(func(int) error)
	// deviceDescUpdateTime is the schema descriptor for update_time field.
	deviceDescUpdateTime := deviceMixinFields0[4].Descriptor()
	// device.DefaultUpdateTime holds the default value on creation for the update_time field.
	device.DefaultUpdateTime = deviceDescUpdateTime.Default.(func() time.Time)
	// device.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	device.UpdateDefaultUpdateTime = deviceDescUpdateTime.UpdateDefault.(func() time.Time)
	// deviceDescBrand is the schema descriptor for brand field.
	deviceDescBrand := deviceFields[0].Descriptor()
	// device.DefaultBrand holds the default value on creation for the brand field.
	device.DefaultBrand = enums.DeviceBrand(deviceDescBrand.Default.(int))
	// device.BrandValidator is a validator for the "brand" field. It is called by the builders before save.
	device.BrandValidator = deviceDescBrand.Validators[0].(func(int) error)
	// deviceDescModel is the schema descriptor for model field.
	deviceDescModel := deviceFields[1].Descriptor()
	// device.DefaultModel holds the default value on creation for the model field.
	device.DefaultModel = enums.DeviceModel(deviceDescModel.Default.(int))
	// device.ModelValidator is a validator for the "model" field. It is called by the builders before save.
	device.ModelValidator = deviceDescModel.Validators[0].(func(int) error)
	// deviceDescName is the schema descriptor for name field.
	deviceDescName := deviceFields[2].Descriptor()
	// device.DefaultName holds the default value on creation for the name field.
	device.DefaultName = deviceDescName.Default.(string)
	// device.NameValidator is a validator for the "name" field. It is called by the builders before save.
	device.NameValidator = deviceDescName.Validators[0].(func(string) error)
	// deviceDescSn is the schema descriptor for sn field.
	deviceDescSn := deviceFields[3].Descriptor()
	// device.SnValidator is a validator for the "sn" field. It is called by the builders before save.
	device.SnValidator = deviceDescSn.Validators[0].(func(string) error)
	// deviceDescDeviceType is the schema descriptor for device_type field.
	deviceDescDeviceType := deviceFields[4].Descriptor()
	// device.DefaultDeviceType holds the default value on creation for the device_type field.
	device.DefaultDeviceType = enums.DeviceType(deviceDescDeviceType.Default.(int))
	// device.DeviceTypeValidator is a validator for the "device_type" field. It is called by the builders before save.
	device.DeviceTypeValidator = deviceDescDeviceType.Validators[0].(func(int) error)
	deviceinstallationMixin := schema.DeviceInstallation{}.Mixin()
	deviceinstallationMixinHooks0 := deviceinstallationMixin[0].Hooks()
	deviceinstallation.Hooks[0] = deviceinstallationMixinHooks0[0]
	deviceinstallationMixinFields0 := deviceinstallationMixin[0].Fields()
	_ = deviceinstallationMixinFields0
	deviceinstallationFields := schema.DeviceInstallation{}.Fields()
	_ = deviceinstallationFields
	// deviceinstallationDescCreateTime is the schema descriptor for create_time field.
	deviceinstallationDescCreateTime := deviceinstallationMixinFields0[0].Descriptor()
	// deviceinstallation.DefaultCreateTime holds the default value on creation for the create_time field.
	deviceinstallation.DefaultCreateTime = deviceinstallationDescCreateTime.Default.(func() time.Time)
	// deviceinstallationDescCreatorID is the schema descriptor for creator_id field.
	deviceinstallationDescCreatorID := deviceinstallationMixinFields0[1].Descriptor()
	// deviceinstallation.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	deviceinstallation.CreatorIDValidator = deviceinstallationDescCreatorID.Validators[0].(func(int) error)
	// deviceinstallationDescUpdaterID is the schema descriptor for updater_id field.
	deviceinstallationDescUpdaterID := deviceinstallationMixinFields0[3].Descriptor()
	// deviceinstallation.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	deviceinstallation.UpdaterIDValidator = deviceinstallationDescUpdaterID.Validators[0].(func(int) error)
	// deviceinstallationDescUpdateTime is the schema descriptor for update_time field.
	deviceinstallationDescUpdateTime := deviceinstallationMixinFields0[4].Descriptor()
	// deviceinstallation.DefaultUpdateTime holds the default value on creation for the update_time field.
	deviceinstallation.DefaultUpdateTime = deviceinstallationDescUpdateTime.Default.(func() time.Time)
	// deviceinstallation.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	deviceinstallation.UpdateDefaultUpdateTime = deviceinstallationDescUpdateTime.UpdateDefault.(func() time.Time)
	// deviceinstallationDescDeviceID is the schema descriptor for device_id field.
	deviceinstallationDescDeviceID := deviceinstallationFields[0].Descriptor()
	// deviceinstallation.DeviceIDValidator is a validator for the "device_id" field. It is called by the builders before save.
	deviceinstallation.DeviceIDValidator = deviceinstallationDescDeviceID.Validators[0].(func(int) error)
	// deviceinstallationDescAreaID is the schema descriptor for area_id field.
	deviceinstallationDescAreaID := deviceinstallationFields[1].Descriptor()
	// deviceinstallation.AreaIDValidator is a validator for the "area_id" field. It is called by the builders before save.
	deviceinstallation.AreaIDValidator = deviceinstallationDescAreaID.Validators[0].(func(int) error)
	// deviceinstallationDescAliasName is the schema descriptor for alias_name field.
	deviceinstallationDescAliasName := deviceinstallationFields[2].Descriptor()
	// deviceinstallation.AliasNameValidator is a validator for the "alias_name" field. It is called by the builders before save.
	deviceinstallation.AliasNameValidator = deviceinstallationDescAliasName.Validators[0].(func(string) error)
	employeeMixin := schema.Employee{}.Mixin()
	employeeMixinHooks0 := employeeMixin[0].Hooks()
	employee.Hooks[0] = employeeMixinHooks0[0]
	employeeMixinFields0 := employeeMixin[0].Fields()
	_ = employeeMixinFields0
	employeeFields := schema.Employee{}.Fields()
	_ = employeeFields
	// employeeDescCreateTime is the schema descriptor for create_time field.
	employeeDescCreateTime := employeeMixinFields0[0].Descriptor()
	// employee.DefaultCreateTime holds the default value on creation for the create_time field.
	employee.DefaultCreateTime = employeeDescCreateTime.Default.(func() time.Time)
	// employeeDescCreatorID is the schema descriptor for creator_id field.
	employeeDescCreatorID := employeeMixinFields0[1].Descriptor()
	// employee.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	employee.CreatorIDValidator = employeeDescCreatorID.Validators[0].(func(int) error)
	// employeeDescUpdaterID is the schema descriptor for updater_id field.
	employeeDescUpdaterID := employeeMixinFields0[3].Descriptor()
	// employee.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	employee.UpdaterIDValidator = employeeDescUpdaterID.Validators[0].(func(int) error)
	// employeeDescUpdateTime is the schema descriptor for update_time field.
	employeeDescUpdateTime := employeeMixinFields0[4].Descriptor()
	// employee.DefaultUpdateTime holds the default value on creation for the update_time field.
	employee.DefaultUpdateTime = employeeDescUpdateTime.Default.(func() time.Time)
	// employee.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	employee.UpdateDefaultUpdateTime = employeeDescUpdateTime.UpdateDefault.(func() time.Time)
	// employeeDescAdminID is the schema descriptor for admin_id field.
	employeeDescAdminID := employeeFields[0].Descriptor()
	// employee.AdminIDValidator is a validator for the "admin_id" field. It is called by the builders before save.
	employee.AdminIDValidator = employeeDescAdminID.Validators[0].(func(int) error)
	// employeeDescDepartmentID is the schema descriptor for department_id field.
	employeeDescDepartmentID := employeeFields[1].Descriptor()
	// employee.DepartmentIDValidator is a validator for the "department_id" field. It is called by the builders before save.
	employee.DepartmentIDValidator = employeeDescDepartmentID.Validators[0].(func(int) error)
	// employeeDescOccupationID is the schema descriptor for occupation_id field.
	employeeDescOccupationID := employeeFields[2].Descriptor()
	// employee.OccupationIDValidator is a validator for the "occupation_id" field. It is called by the builders before save.
	employee.OccupationIDValidator = employeeDescOccupationID.Validators[0].(func(int) error)
	eventMixin := schema.Event{}.Mixin()
	eventMixinHooks0 := eventMixin[0].Hooks()
	event.Hooks[0] = eventMixinHooks0[0]
	eventMixinFields0 := eventMixin[0].Fields()
	_ = eventMixinFields0
	eventFields := schema.Event{}.Fields()
	_ = eventFields
	// eventDescCreateTime is the schema descriptor for create_time field.
	eventDescCreateTime := eventMixinFields0[0].Descriptor()
	// event.DefaultCreateTime holds the default value on creation for the create_time field.
	event.DefaultCreateTime = eventDescCreateTime.Default.(func() time.Time)
	// eventDescCreatorID is the schema descriptor for creator_id field.
	eventDescCreatorID := eventMixinFields0[1].Descriptor()
	// event.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	event.CreatorIDValidator = eventDescCreatorID.Validators[0].(func(int) error)
	// eventDescUpdaterID is the schema descriptor for updater_id field.
	eventDescUpdaterID := eventMixinFields0[3].Descriptor()
	// event.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	event.UpdaterIDValidator = eventDescUpdaterID.Validators[0].(func(int) error)
	// eventDescUpdateTime is the schema descriptor for update_time field.
	eventDescUpdateTime := eventMixinFields0[4].Descriptor()
	// event.DefaultUpdateTime holds the default value on creation for the update_time field.
	event.DefaultUpdateTime = eventDescUpdateTime.Default.(func() time.Time)
	// event.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	event.UpdateDefaultUpdateTime = eventDescUpdateTime.UpdateDefault.(func() time.Time)
	// eventDescDeviceID is the schema descriptor for device_id field.
	eventDescDeviceID := eventFields[0].Descriptor()
	// event.DeviceIDValidator is a validator for the "device_id" field. It is called by the builders before save.
	event.DeviceIDValidator = eventDescDeviceID.Validators[0].(func(int) error)
	// eventDescVideoID is the schema descriptor for video_id field.
	eventDescVideoID := eventFields[1].Descriptor()
	// event.VideoIDValidator is a validator for the "video_id" field. It is called by the builders before save.
	event.VideoIDValidator = eventDescVideoID.Validators[0].(func(int) error)
	// eventDescEventTime is the schema descriptor for event_time field.
	eventDescEventTime := eventFields[2].Descriptor()
	// event.DefaultEventTime holds the default value on creation for the event_time field.
	event.DefaultEventTime = eventDescEventTime.Default.(func() time.Time)
	// eventDescEventType is the schema descriptor for event_type field.
	eventDescEventType := eventFields[3].Descriptor()
	// event.DefaultEventType holds the default value on creation for the event_type field.
	event.DefaultEventType = enums.EventType(eventDescEventType.Default.(int))
	// event.EventTypeValidator is a validator for the "event_type" field. It is called by the builders before save.
	event.EventTypeValidator = eventDescEventType.Validators[0].(func(int) error)
	// eventDescEventStatus is the schema descriptor for event_status field.
	eventDescEventStatus := eventFields[4].Descriptor()
	// event.DefaultEventStatus holds the default value on creation for the event_status field.
	event.DefaultEventStatus = enums.EventStatus(eventDescEventStatus.Default.(int))
	// event.EventStatusValidator is a validator for the "event_status" field. It is called by the builders before save.
	event.EventStatusValidator = eventDescEventStatus.Validators[0].(func(int) error)
	// eventDescImages is the schema descriptor for images field.
	eventDescImages := eventFields[5].Descriptor()
	// event.DefaultImages holds the default value on creation for the images field.
	event.DefaultImages = eventDescImages.Default.([]*types.UploadedImage)
	// eventDescLabeledImages is the schema descriptor for labeled_images field.
	eventDescLabeledImages := eventFields[6].Descriptor()
	// event.DefaultLabeledImages holds the default value on creation for the labeled_images field.
	event.DefaultLabeledImages = eventDescLabeledImages.Default.([]*types.UploadedImage)
	// eventDescDataID is the schema descriptor for data_id field.
	eventDescDataID := eventFields[7].Descriptor()
	// event.DataIDValidator is a validator for the "data_id" field. It is called by the builders before save.
	event.DataIDValidator = eventDescDataID.Validators[0].(func(string) error)
	eventlevelMixin := schema.EventLevel{}.Mixin()
	eventlevelMixinHooks0 := eventlevelMixin[0].Hooks()
	eventlevel.Hooks[0] = eventlevelMixinHooks0[0]
	eventlevelMixinFields0 := eventlevelMixin[0].Fields()
	_ = eventlevelMixinFields0
	eventlevelFields := schema.EventLevel{}.Fields()
	_ = eventlevelFields
	// eventlevelDescCreateTime is the schema descriptor for create_time field.
	eventlevelDescCreateTime := eventlevelMixinFields0[0].Descriptor()
	// eventlevel.DefaultCreateTime holds the default value on creation for the create_time field.
	eventlevel.DefaultCreateTime = eventlevelDescCreateTime.Default.(func() time.Time)
	// eventlevelDescCreatorID is the schema descriptor for creator_id field.
	eventlevelDescCreatorID := eventlevelMixinFields0[1].Descriptor()
	// eventlevel.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	eventlevel.CreatorIDValidator = eventlevelDescCreatorID.Validators[0].(func(int) error)
	// eventlevelDescUpdaterID is the schema descriptor for updater_id field.
	eventlevelDescUpdaterID := eventlevelMixinFields0[3].Descriptor()
	// eventlevel.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	eventlevel.UpdaterIDValidator = eventlevelDescUpdaterID.Validators[0].(func(int) error)
	// eventlevelDescUpdateTime is the schema descriptor for update_time field.
	eventlevelDescUpdateTime := eventlevelMixinFields0[4].Descriptor()
	// eventlevel.DefaultUpdateTime holds the default value on creation for the update_time field.
	eventlevel.DefaultUpdateTime = eventlevelDescUpdateTime.Default.(func() time.Time)
	// eventlevel.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	eventlevel.UpdateDefaultUpdateTime = eventlevelDescUpdateTime.UpdateDefault.(func() time.Time)
	// eventlevelDescName is the schema descriptor for name field.
	eventlevelDescName := eventlevelFields[0].Descriptor()
	// eventlevel.NameValidator is a validator for the "name" field. It is called by the builders before save.
	eventlevel.NameValidator = eventlevelDescName.Validators[0].(func(string) error)
	// eventlevelDescIcon is the schema descriptor for icon field.
	eventlevelDescIcon := eventlevelFields[3].Descriptor()
	// eventlevel.IconValidator is a validator for the "icon" field. It is called by the builders before save.
	eventlevel.IconValidator = eventlevelDescIcon.Validators[0].(func(string) error)
	eventlogMixin := schema.EventLog{}.Mixin()
	eventlogMixinHooks0 := eventlogMixin[0].Hooks()
	eventlog.Hooks[0] = eventlogMixinHooks0[0]
	eventlogMixinFields0 := eventlogMixin[0].Fields()
	_ = eventlogMixinFields0
	eventlogFields := schema.EventLog{}.Fields()
	_ = eventlogFields
	// eventlogDescCreateTime is the schema descriptor for create_time field.
	eventlogDescCreateTime := eventlogMixinFields0[0].Descriptor()
	// eventlog.DefaultCreateTime holds the default value on creation for the create_time field.
	eventlog.DefaultCreateTime = eventlogDescCreateTime.Default.(func() time.Time)
	// eventlogDescCreatorID is the schema descriptor for creator_id field.
	eventlogDescCreatorID := eventlogMixinFields0[1].Descriptor()
	// eventlog.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	eventlog.CreatorIDValidator = eventlogDescCreatorID.Validators[0].(func(int) error)
	// eventlogDescUpdaterID is the schema descriptor for updater_id field.
	eventlogDescUpdaterID := eventlogMixinFields0[3].Descriptor()
	// eventlog.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	eventlog.UpdaterIDValidator = eventlogDescUpdaterID.Validators[0].(func(int) error)
	// eventlogDescUpdateTime is the schema descriptor for update_time field.
	eventlogDescUpdateTime := eventlogMixinFields0[4].Descriptor()
	// eventlog.DefaultUpdateTime holds the default value on creation for the update_time field.
	eventlog.DefaultUpdateTime = eventlogDescUpdateTime.Default.(func() time.Time)
	// eventlog.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	eventlog.UpdateDefaultUpdateTime = eventlogDescUpdateTime.UpdateDefault.(func() time.Time)
	// eventlogDescDeviceID is the schema descriptor for device_id field.
	eventlogDescDeviceID := eventlogFields[0].Descriptor()
	// eventlog.DeviceIDValidator is a validator for the "device_id" field. It is called by the builders before save.
	eventlog.DeviceIDValidator = eventlogDescDeviceID.Validators[0].(func(int) error)
	// eventlogDescEventID is the schema descriptor for event_id field.
	eventlogDescEventID := eventlogFields[1].Descriptor()
	// eventlog.EventIDValidator is a validator for the "event_id" field. It is called by the builders before save.
	eventlog.EventIDValidator = eventlogDescEventID.Validators[0].(func(int) error)
	// eventlogDescActorID is the schema descriptor for actor_id field.
	eventlogDescActorID := eventlogFields[2].Descriptor()
	// eventlog.ActorIDValidator is a validator for the "actor_id" field. It is called by the builders before save.
	eventlog.ActorIDValidator = eventlogDescActorID.Validators[0].(func(int) error)
	// eventlogDescActor2ID is the schema descriptor for actor2_id field.
	eventlogDescActor2ID := eventlogFields[3].Descriptor()
	// eventlog.Actor2IDValidator is a validator for the "actor2_id" field. It is called by the builders before save.
	eventlog.Actor2IDValidator = eventlogDescActor2ID.Validators[0].(func(int) error)
	// eventlogDescLogType is the schema descriptor for log_type field.
	eventlogDescLogType := eventlogFields[4].Descriptor()
	// eventlog.DefaultLogType holds the default value on creation for the log_type field.
	eventlog.DefaultLogType = enums.EventLogType(eventlogDescLogType.Default.(int))
	// eventlog.LogTypeValidator is a validator for the "log_type" field. It is called by the builders before save.
	eventlog.LogTypeValidator = eventlogDescLogType.Validators[0].(func(int) error)
	fixingMixin := schema.Fixing{}.Mixin()
	fixingMixinHooks0 := fixingMixin[0].Hooks()
	fixing.Hooks[0] = fixingMixinHooks0[0]
	fixingMixinFields0 := fixingMixin[0].Fields()
	_ = fixingMixinFields0
	fixingFields := schema.Fixing{}.Fields()
	_ = fixingFields
	// fixingDescCreateTime is the schema descriptor for create_time field.
	fixingDescCreateTime := fixingMixinFields0[0].Descriptor()
	// fixing.DefaultCreateTime holds the default value on creation for the create_time field.
	fixing.DefaultCreateTime = fixingDescCreateTime.Default.(func() time.Time)
	// fixingDescCreatorID is the schema descriptor for creator_id field.
	fixingDescCreatorID := fixingMixinFields0[1].Descriptor()
	// fixing.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	fixing.CreatorIDValidator = fixingDescCreatorID.Validators[0].(func(int) error)
	// fixingDescUpdaterID is the schema descriptor for updater_id field.
	fixingDescUpdaterID := fixingMixinFields0[3].Descriptor()
	// fixing.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	fixing.UpdaterIDValidator = fixingDescUpdaterID.Validators[0].(func(int) error)
	// fixingDescUpdateTime is the schema descriptor for update_time field.
	fixingDescUpdateTime := fixingMixinFields0[4].Descriptor()
	// fixing.DefaultUpdateTime holds the default value on creation for the update_time field.
	fixing.DefaultUpdateTime = fixingDescUpdateTime.Default.(func() time.Time)
	// fixing.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	fixing.UpdateDefaultUpdateTime = fixingDescUpdateTime.UpdateDefault.(func() time.Time)
	// fixingDescFixerID is the schema descriptor for fixer_id field.
	fixingDescFixerID := fixingFields[0].Descriptor()
	// fixing.FixerIDValidator is a validator for the "fixer_id" field. It is called by the builders before save.
	fixing.FixerIDValidator = fixingDescFixerID.Validators[0].(func(int) error)
	// fixingDescEventID is the schema descriptor for event_id field.
	fixingDescEventID := fixingFields[1].Descriptor()
	// fixing.EventIDValidator is a validator for the "event_id" field. It is called by the builders before save.
	fixing.EventIDValidator = fixingDescEventID.Validators[0].(func(int) error)
	// fixingDescDeviceID is the schema descriptor for device_id field.
	fixingDescDeviceID := fixingFields[2].Descriptor()
	// fixing.DeviceIDValidator is a validator for the "device_id" field. It is called by the builders before save.
	fixing.DeviceIDValidator = fixingDescDeviceID.Validators[0].(func(int) error)
	occupationMixin := schema.Occupation{}.Mixin()
	occupationMixinHooks0 := occupationMixin[0].Hooks()
	occupation.Hooks[0] = occupationMixinHooks0[0]
	occupationMixinFields0 := occupationMixin[0].Fields()
	_ = occupationMixinFields0
	occupationFields := schema.Occupation{}.Fields()
	_ = occupationFields
	// occupationDescCreateTime is the schema descriptor for create_time field.
	occupationDescCreateTime := occupationMixinFields0[0].Descriptor()
	// occupation.DefaultCreateTime holds the default value on creation for the create_time field.
	occupation.DefaultCreateTime = occupationDescCreateTime.Default.(func() time.Time)
	// occupationDescCreatorID is the schema descriptor for creator_id field.
	occupationDescCreatorID := occupationMixinFields0[1].Descriptor()
	// occupation.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	occupation.CreatorIDValidator = occupationDescCreatorID.Validators[0].(func(int) error)
	// occupationDescUpdaterID is the schema descriptor for updater_id field.
	occupationDescUpdaterID := occupationMixinFields0[3].Descriptor()
	// occupation.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	occupation.UpdaterIDValidator = occupationDescUpdaterID.Validators[0].(func(int) error)
	// occupationDescUpdateTime is the schema descriptor for update_time field.
	occupationDescUpdateTime := occupationMixinFields0[4].Descriptor()
	// occupation.DefaultUpdateTime holds the default value on creation for the update_time field.
	occupation.DefaultUpdateTime = occupationDescUpdateTime.Default.(func() time.Time)
	// occupation.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	occupation.UpdateDefaultUpdateTime = occupationDescUpdateTime.UpdateDefault.(func() time.Time)
	// occupationDescName is the schema descriptor for name field.
	occupationDescName := occupationFields[0].Descriptor()
	// occupation.NameValidator is a validator for the "name" field. It is called by the builders before save.
	occupation.NameValidator = func() func(string) error {
		validators := occupationDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	permissionMixin := schema.Permission{}.Mixin()
	permissionMixinHooks0 := permissionMixin[0].Hooks()
	permission.Hooks[0] = permissionMixinHooks0[0]
	permissionMixinFields0 := permissionMixin[0].Fields()
	_ = permissionMixinFields0
	permissionFields := schema.Permission{}.Fields()
	_ = permissionFields
	// permissionDescCreateTime is the schema descriptor for create_time field.
	permissionDescCreateTime := permissionMixinFields0[0].Descriptor()
	// permission.DefaultCreateTime holds the default value on creation for the create_time field.
	permission.DefaultCreateTime = permissionDescCreateTime.Default.(func() time.Time)
	// permissionDescCreatorID is the schema descriptor for creator_id field.
	permissionDescCreatorID := permissionMixinFields0[1].Descriptor()
	// permission.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	permission.CreatorIDValidator = permissionDescCreatorID.Validators[0].(func(int) error)
	// permissionDescUpdaterID is the schema descriptor for updater_id field.
	permissionDescUpdaterID := permissionMixinFields0[3].Descriptor()
	// permission.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	permission.UpdaterIDValidator = permissionDescUpdaterID.Validators[0].(func(int) error)
	// permissionDescUpdateTime is the schema descriptor for update_time field.
	permissionDescUpdateTime := permissionMixinFields0[4].Descriptor()
	// permission.DefaultUpdateTime holds the default value on creation for the update_time field.
	permission.DefaultUpdateTime = permissionDescUpdateTime.Default.(func() time.Time)
	// permission.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	permission.UpdateDefaultUpdateTime = permissionDescUpdateTime.UpdateDefault.(func() time.Time)
	// permissionDescName is the schema descriptor for name field.
	permissionDescName := permissionFields[0].Descriptor()
	// permission.NameValidator is a validator for the "name" field. It is called by the builders before save.
	permission.NameValidator = func() func(string) error {
		validators := permissionDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	riskMixin := schema.Risk{}.Mixin()
	riskMixinHooks0 := riskMixin[0].Hooks()
	risk.Hooks[0] = riskMixinHooks0[0]
	riskMixinFields0 := riskMixin[0].Fields()
	_ = riskMixinFields0
	riskFields := schema.Risk{}.Fields()
	_ = riskFields
	// riskDescCreateTime is the schema descriptor for create_time field.
	riskDescCreateTime := riskMixinFields0[0].Descriptor()
	// risk.DefaultCreateTime holds the default value on creation for the create_time field.
	risk.DefaultCreateTime = riskDescCreateTime.Default.(func() time.Time)
	// riskDescCreatorID is the schema descriptor for creator_id field.
	riskDescCreatorID := riskMixinFields0[1].Descriptor()
	// risk.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	risk.CreatorIDValidator = riskDescCreatorID.Validators[0].(func(int) error)
	// riskDescUpdaterID is the schema descriptor for updater_id field.
	riskDescUpdaterID := riskMixinFields0[3].Descriptor()
	// risk.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	risk.UpdaterIDValidator = riskDescUpdaterID.Validators[0].(func(int) error)
	// riskDescUpdateTime is the schema descriptor for update_time field.
	riskDescUpdateTime := riskMixinFields0[4].Descriptor()
	// risk.DefaultUpdateTime holds the default value on creation for the update_time field.
	risk.DefaultUpdateTime = riskDescUpdateTime.Default.(func() time.Time)
	// risk.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	risk.UpdateDefaultUpdateTime = riskDescUpdateTime.UpdateDefault.(func() time.Time)
	// riskDescTitle is the schema descriptor for title field.
	riskDescTitle := riskFields[0].Descriptor()
	// risk.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	risk.TitleValidator = func() func(string) error {
		validators := riskDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// riskDescImages is the schema descriptor for images field.
	riskDescImages := riskFields[2].Descriptor()
	// risk.DefaultImages holds the default value on creation for the images field.
	risk.DefaultImages = riskDescImages.Default.([]types.UploadedImage)
	// riskDescMaintainedImages is the schema descriptor for maintained_images field.
	riskDescMaintainedImages := riskFields[3].Descriptor()
	// risk.DefaultMaintainedImages holds the default value on creation for the maintained_images field.
	risk.DefaultMaintainedImages = riskDescMaintainedImages.Default.([]types.UploadedImage)
	// riskDescRiskCategoryID is the schema descriptor for risk_category_id field.
	riskDescRiskCategoryID := riskFields[4].Descriptor()
	// risk.RiskCategoryIDValidator is a validator for the "risk_category_id" field. It is called by the builders before save.
	risk.RiskCategoryIDValidator = riskDescRiskCategoryID.Validators[0].(func(int) error)
	// riskDescRiskLocationID is the schema descriptor for risk_location_id field.
	riskDescRiskLocationID := riskFields[5].Descriptor()
	// risk.RiskLocationIDValidator is a validator for the "risk_location_id" field. It is called by the builders before save.
	risk.RiskLocationIDValidator = riskDescRiskLocationID.Validators[0].(func(int) error)
	// riskDescMaintainerID is the schema descriptor for maintainer_id field.
	riskDescMaintainerID := riskFields[6].Descriptor()
	// risk.MaintainerIDValidator is a validator for the "maintainer_id" field. It is called by the builders before save.
	risk.MaintainerIDValidator = riskDescMaintainerID.Validators[0].(func(int) error)
	// riskDescMaintainStatus is the schema descriptor for maintain_status field.
	riskDescMaintainStatus := riskFields[8].Descriptor()
	// risk.DefaultMaintainStatus holds the default value on creation for the maintain_status field.
	risk.DefaultMaintainStatus = maintain_status.MaintainStatus(riskDescMaintainStatus.Default.(int))
	// risk.MaintainStatusValidator is a validator for the "maintain_status" field. It is called by the builders before save.
	risk.MaintainStatusValidator = riskDescMaintainStatus.Validators[0].(func(int) error)
	riskcategoryMixin := schema.RiskCategory{}.Mixin()
	riskcategoryMixinHooks0 := riskcategoryMixin[0].Hooks()
	riskcategory.Hooks[0] = riskcategoryMixinHooks0[0]
	riskcategoryMixinFields0 := riskcategoryMixin[0].Fields()
	_ = riskcategoryMixinFields0
	riskcategoryFields := schema.RiskCategory{}.Fields()
	_ = riskcategoryFields
	// riskcategoryDescCreateTime is the schema descriptor for create_time field.
	riskcategoryDescCreateTime := riskcategoryMixinFields0[0].Descriptor()
	// riskcategory.DefaultCreateTime holds the default value on creation for the create_time field.
	riskcategory.DefaultCreateTime = riskcategoryDescCreateTime.Default.(func() time.Time)
	// riskcategoryDescCreatorID is the schema descriptor for creator_id field.
	riskcategoryDescCreatorID := riskcategoryMixinFields0[1].Descriptor()
	// riskcategory.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	riskcategory.CreatorIDValidator = riskcategoryDescCreatorID.Validators[0].(func(int) error)
	// riskcategoryDescUpdaterID is the schema descriptor for updater_id field.
	riskcategoryDescUpdaterID := riskcategoryMixinFields0[3].Descriptor()
	// riskcategory.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	riskcategory.UpdaterIDValidator = riskcategoryDescUpdaterID.Validators[0].(func(int) error)
	// riskcategoryDescUpdateTime is the schema descriptor for update_time field.
	riskcategoryDescUpdateTime := riskcategoryMixinFields0[4].Descriptor()
	// riskcategory.DefaultUpdateTime holds the default value on creation for the update_time field.
	riskcategory.DefaultUpdateTime = riskcategoryDescUpdateTime.Default.(func() time.Time)
	// riskcategory.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	riskcategory.UpdateDefaultUpdateTime = riskcategoryDescUpdateTime.UpdateDefault.(func() time.Time)
	// riskcategoryDescName is the schema descriptor for name field.
	riskcategoryDescName := riskcategoryFields[0].Descriptor()
	// riskcategory.NameValidator is a validator for the "name" field. It is called by the builders before save.
	riskcategory.NameValidator = func() func(string) error {
		validators := riskcategoryDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	risklocationMixin := schema.RiskLocation{}.Mixin()
	risklocationMixinHooks0 := risklocationMixin[0].Hooks()
	risklocation.Hooks[0] = risklocationMixinHooks0[0]
	risklocationMixinFields0 := risklocationMixin[0].Fields()
	_ = risklocationMixinFields0
	risklocationFields := schema.RiskLocation{}.Fields()
	_ = risklocationFields
	// risklocationDescCreateTime is the schema descriptor for create_time field.
	risklocationDescCreateTime := risklocationMixinFields0[0].Descriptor()
	// risklocation.DefaultCreateTime holds the default value on creation for the create_time field.
	risklocation.DefaultCreateTime = risklocationDescCreateTime.Default.(func() time.Time)
	// risklocationDescCreatorID is the schema descriptor for creator_id field.
	risklocationDescCreatorID := risklocationMixinFields0[1].Descriptor()
	// risklocation.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	risklocation.CreatorIDValidator = risklocationDescCreatorID.Validators[0].(func(int) error)
	// risklocationDescUpdaterID is the schema descriptor for updater_id field.
	risklocationDescUpdaterID := risklocationMixinFields0[3].Descriptor()
	// risklocation.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	risklocation.UpdaterIDValidator = risklocationDescUpdaterID.Validators[0].(func(int) error)
	// risklocationDescUpdateTime is the schema descriptor for update_time field.
	risklocationDescUpdateTime := risklocationMixinFields0[4].Descriptor()
	// risklocation.DefaultUpdateTime holds the default value on creation for the update_time field.
	risklocation.DefaultUpdateTime = risklocationDescUpdateTime.Default.(func() time.Time)
	// risklocation.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	risklocation.UpdateDefaultUpdateTime = risklocationDescUpdateTime.UpdateDefault.(func() time.Time)
	// risklocationDescName is the schema descriptor for name field.
	risklocationDescName := risklocationFields[0].Descriptor()
	// risklocation.NameValidator is a validator for the "name" field. It is called by the builders before save.
	risklocation.NameValidator = func() func(string) error {
		validators := risklocationDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	sweepMixin := schema.Sweep{}.Mixin()
	sweepMixinHooks0 := sweepMixin[0].Hooks()
	sweep.Hooks[0] = sweepMixinHooks0[0]
	sweepMixinFields0 := sweepMixin[0].Fields()
	_ = sweepMixinFields0
	sweepFields := schema.Sweep{}.Fields()
	_ = sweepFields
	// sweepDescCreateTime is the schema descriptor for create_time field.
	sweepDescCreateTime := sweepMixinFields0[0].Descriptor()
	// sweep.DefaultCreateTime holds the default value on creation for the create_time field.
	sweep.DefaultCreateTime = sweepDescCreateTime.Default.(func() time.Time)
	// sweepDescCreatorID is the schema descriptor for creator_id field.
	sweepDescCreatorID := sweepMixinFields0[1].Descriptor()
	// sweep.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	sweep.CreatorIDValidator = sweepDescCreatorID.Validators[0].(func(int) error)
	// sweepDescUpdaterID is the schema descriptor for updater_id field.
	sweepDescUpdaterID := sweepMixinFields0[3].Descriptor()
	// sweep.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	sweep.UpdaterIDValidator = sweepDescUpdaterID.Validators[0].(func(int) error)
	// sweepDescUpdateTime is the schema descriptor for update_time field.
	sweepDescUpdateTime := sweepMixinFields0[4].Descriptor()
	// sweep.DefaultUpdateTime holds the default value on creation for the update_time field.
	sweep.DefaultUpdateTime = sweepDescUpdateTime.Default.(func() time.Time)
	// sweep.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	sweep.UpdateDefaultUpdateTime = sweepDescUpdateTime.UpdateDefault.(func() time.Time)
	// sweepDescName is the schema descriptor for name field.
	sweepDescName := sweepFields[0].Descriptor()
	// sweep.NameValidator is a validator for the "name" field. It is called by the builders before save.
	sweep.NameValidator = func() func(string) error {
		validators := sweepDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// sweepDescRiskCategoryID is the schema descriptor for risk_category_id field.
	sweepDescRiskCategoryID := sweepFields[1].Descriptor()
	// sweep.RiskCategoryIDValidator is a validator for the "risk_category_id" field. It is called by the builders before save.
	sweep.RiskCategoryIDValidator = sweepDescRiskCategoryID.Validators[0].(func(int) error)
	// sweepDescRiskLocationID is the schema descriptor for risk_location_id field.
	sweepDescRiskLocationID := sweepFields[2].Descriptor()
	// sweep.RiskLocationIDValidator is a validator for the "risk_location_id" field. It is called by the builders before save.
	sweep.RiskLocationIDValidator = sweepDescRiskLocationID.Validators[0].(func(int) error)
	sweepresultMixin := schema.SweepResult{}.Mixin()
	sweepresultMixinHooks0 := sweepresultMixin[0].Hooks()
	sweepresult.Hooks[0] = sweepresultMixinHooks0[0]
	sweepresultMixinFields0 := sweepresultMixin[0].Fields()
	_ = sweepresultMixinFields0
	sweepresultFields := schema.SweepResult{}.Fields()
	_ = sweepresultFields
	// sweepresultDescCreateTime is the schema descriptor for create_time field.
	sweepresultDescCreateTime := sweepresultMixinFields0[0].Descriptor()
	// sweepresult.DefaultCreateTime holds the default value on creation for the create_time field.
	sweepresult.DefaultCreateTime = sweepresultDescCreateTime.Default.(func() time.Time)
	// sweepresultDescCreatorID is the schema descriptor for creator_id field.
	sweepresultDescCreatorID := sweepresultMixinFields0[1].Descriptor()
	// sweepresult.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	sweepresult.CreatorIDValidator = sweepresultDescCreatorID.Validators[0].(func(int) error)
	// sweepresultDescUpdaterID is the schema descriptor for updater_id field.
	sweepresultDescUpdaterID := sweepresultMixinFields0[3].Descriptor()
	// sweepresult.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	sweepresult.UpdaterIDValidator = sweepresultDescUpdaterID.Validators[0].(func(int) error)
	// sweepresultDescUpdateTime is the schema descriptor for update_time field.
	sweepresultDescUpdateTime := sweepresultMixinFields0[4].Descriptor()
	// sweepresult.DefaultUpdateTime holds the default value on creation for the update_time field.
	sweepresult.DefaultUpdateTime = sweepresultDescUpdateTime.Default.(func() time.Time)
	// sweepresult.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	sweepresult.UpdateDefaultUpdateTime = sweepresultDescUpdateTime.UpdateDefault.(func() time.Time)
	// sweepresultDescSweepID is the schema descriptor for sweep_id field.
	sweepresultDescSweepID := sweepresultFields[0].Descriptor()
	// sweepresult.SweepIDValidator is a validator for the "sweep_id" field. It is called by the builders before save.
	sweepresult.SweepIDValidator = sweepresultDescSweepID.Validators[0].(func(int) error)
	// sweepresultDescSweepScheduleID is the schema descriptor for sweep_schedule_id field.
	sweepresultDescSweepScheduleID := sweepresultFields[1].Descriptor()
	// sweepresult.SweepScheduleIDValidator is a validator for the "sweep_schedule_id" field. It is called by the builders before save.
	sweepresult.SweepScheduleIDValidator = sweepresultDescSweepScheduleID.Validators[0].(func(int) error)
	sweepresultdetailsMixin := schema.SweepResultDetails{}.Mixin()
	sweepresultdetailsMixinHooks0 := sweepresultdetailsMixin[0].Hooks()
	sweepresultdetails.Hooks[0] = sweepresultdetailsMixinHooks0[0]
	sweepresultdetailsMixinFields0 := sweepresultdetailsMixin[0].Fields()
	_ = sweepresultdetailsMixinFields0
	sweepresultdetailsFields := schema.SweepResultDetails{}.Fields()
	_ = sweepresultdetailsFields
	// sweepresultdetailsDescCreateTime is the schema descriptor for create_time field.
	sweepresultdetailsDescCreateTime := sweepresultdetailsMixinFields0[0].Descriptor()
	// sweepresultdetails.DefaultCreateTime holds the default value on creation for the create_time field.
	sweepresultdetails.DefaultCreateTime = sweepresultdetailsDescCreateTime.Default.(func() time.Time)
	// sweepresultdetailsDescCreatorID is the schema descriptor for creator_id field.
	sweepresultdetailsDescCreatorID := sweepresultdetailsMixinFields0[1].Descriptor()
	// sweepresultdetails.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	sweepresultdetails.CreatorIDValidator = sweepresultdetailsDescCreatorID.Validators[0].(func(int) error)
	// sweepresultdetailsDescUpdaterID is the schema descriptor for updater_id field.
	sweepresultdetailsDescUpdaterID := sweepresultdetailsMixinFields0[3].Descriptor()
	// sweepresultdetails.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	sweepresultdetails.UpdaterIDValidator = sweepresultdetailsDescUpdaterID.Validators[0].(func(int) error)
	// sweepresultdetailsDescUpdateTime is the schema descriptor for update_time field.
	sweepresultdetailsDescUpdateTime := sweepresultdetailsMixinFields0[4].Descriptor()
	// sweepresultdetails.DefaultUpdateTime holds the default value on creation for the update_time field.
	sweepresultdetails.DefaultUpdateTime = sweepresultdetailsDescUpdateTime.Default.(func() time.Time)
	// sweepresultdetails.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	sweepresultdetails.UpdateDefaultUpdateTime = sweepresultdetailsDescUpdateTime.UpdateDefault.(func() time.Time)
	// sweepresultdetailsDescSweepID is the schema descriptor for sweep_id field.
	sweepresultdetailsDescSweepID := sweepresultdetailsFields[0].Descriptor()
	// sweepresultdetails.SweepIDValidator is a validator for the "sweep_id" field. It is called by the builders before save.
	sweepresultdetails.SweepIDValidator = sweepresultdetailsDescSweepID.Validators[0].(func(int) error)
	// sweepresultdetailsDescSweepScheduleID is the schema descriptor for sweep_schedule_id field.
	sweepresultdetailsDescSweepScheduleID := sweepresultdetailsFields[1].Descriptor()
	// sweepresultdetails.SweepScheduleIDValidator is a validator for the "sweep_schedule_id" field. It is called by the builders before save.
	sweepresultdetails.SweepScheduleIDValidator = sweepresultdetailsDescSweepScheduleID.Validators[0].(func(int) error)
	// sweepresultdetailsDescSweepResultID is the schema descriptor for sweep_result_id field.
	sweepresultdetailsDescSweepResultID := sweepresultdetailsFields[2].Descriptor()
	// sweepresultdetails.SweepResultIDValidator is a validator for the "sweep_result_id" field. It is called by the builders before save.
	sweepresultdetails.SweepResultIDValidator = sweepresultdetailsDescSweepResultID.Validators[0].(func(int) error)
	// sweepresultdetailsDescTitle is the schema descriptor for title field.
	sweepresultdetailsDescTitle := sweepresultdetailsFields[3].Descriptor()
	// sweepresultdetails.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	sweepresultdetails.TitleValidator = func() func(string) error {
		validators := sweepresultdetailsDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// sweepresultdetailsDescResult is the schema descriptor for result field.
	sweepresultdetailsDescResult := sweepresultdetailsFields[4].Descriptor()
	// sweepresultdetails.ResultValidator is a validator for the "result" field. It is called by the builders before save.
	sweepresultdetails.ResultValidator = sweepresultdetailsDescResult.Validators[0].(func(int) error)
	sweepscheduleMixin := schema.SweepSchedule{}.Mixin()
	sweepscheduleMixinHooks0 := sweepscheduleMixin[0].Hooks()
	sweepschedule.Hooks[0] = sweepscheduleMixinHooks0[0]
	sweepscheduleMixinFields0 := sweepscheduleMixin[0].Fields()
	_ = sweepscheduleMixinFields0
	sweepscheduleFields := schema.SweepSchedule{}.Fields()
	_ = sweepscheduleFields
	// sweepscheduleDescCreateTime is the schema descriptor for create_time field.
	sweepscheduleDescCreateTime := sweepscheduleMixinFields0[0].Descriptor()
	// sweepschedule.DefaultCreateTime holds the default value on creation for the create_time field.
	sweepschedule.DefaultCreateTime = sweepscheduleDescCreateTime.Default.(func() time.Time)
	// sweepscheduleDescCreatorID is the schema descriptor for creator_id field.
	sweepscheduleDescCreatorID := sweepscheduleMixinFields0[1].Descriptor()
	// sweepschedule.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	sweepschedule.CreatorIDValidator = sweepscheduleDescCreatorID.Validators[0].(func(int) error)
	// sweepscheduleDescUpdaterID is the schema descriptor for updater_id field.
	sweepscheduleDescUpdaterID := sweepscheduleMixinFields0[3].Descriptor()
	// sweepschedule.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	sweepschedule.UpdaterIDValidator = sweepscheduleDescUpdaterID.Validators[0].(func(int) error)
	// sweepscheduleDescUpdateTime is the schema descriptor for update_time field.
	sweepscheduleDescUpdateTime := sweepscheduleMixinFields0[4].Descriptor()
	// sweepschedule.DefaultUpdateTime holds the default value on creation for the update_time field.
	sweepschedule.DefaultUpdateTime = sweepscheduleDescUpdateTime.Default.(func() time.Time)
	// sweepschedule.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	sweepschedule.UpdateDefaultUpdateTime = sweepscheduleDescUpdateTime.UpdateDefault.(func() time.Time)
	// sweepscheduleDescName is the schema descriptor for name field.
	sweepscheduleDescName := sweepscheduleFields[0].Descriptor()
	// sweepschedule.NameValidator is a validator for the "name" field. It is called by the builders before save.
	sweepschedule.NameValidator = func() func(string) error {
		validators := sweepscheduleDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// sweepscheduleDescSweepID is the schema descriptor for sweep_id field.
	sweepscheduleDescSweepID := sweepscheduleFields[1].Descriptor()
	// sweepschedule.SweepIDValidator is a validator for the "sweep_id" field. It is called by the builders before save.
	sweepschedule.SweepIDValidator = sweepscheduleDescSweepID.Validators[0].(func(int) error)
	// sweepscheduleDescEnabledStatus is the schema descriptor for enabled_status field.
	sweepscheduleDescEnabledStatus := sweepscheduleFields[2].Descriptor()
	// sweepschedule.DefaultEnabledStatus holds the default value on creation for the enabled_status field.
	sweepschedule.DefaultEnabledStatus = enums.EnabledStatus(sweepscheduleDescEnabledStatus.Default.(int))
	// sweepschedule.EnabledStatusValidator is a validator for the "enabled_status" field. It is called by the builders before save.
	sweepschedule.EnabledStatusValidator = sweepscheduleDescEnabledStatus.Validators[0].(func(int) error)
	userMixin := schema.User{}.Mixin()
	userMixinHooks0 := userMixin[0].Hooks()
	user.Hooks[0] = userMixinHooks0[0]
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreateTime is the schema descriptor for create_time field.
	userDescCreateTime := userMixinFields0[0].Descriptor()
	// user.DefaultCreateTime holds the default value on creation for the create_time field.
	user.DefaultCreateTime = userDescCreateTime.Default.(func() time.Time)
	// userDescUpdateTime is the schema descriptor for update_time field.
	userDescUpdateTime := userMixinFields0[2].Descriptor()
	// user.DefaultUpdateTime holds the default value on creation for the update_time field.
	user.DefaultUpdateTime = userDescUpdateTime.Default.(func() time.Time)
	// user.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	user.UpdateDefaultUpdateTime = userDescUpdateTime.UpdateDefault.(func() time.Time)
	// userDescUpdaterID is the schema descriptor for updater_id field.
	userDescUpdaterID := userMixinFields0[3].Descriptor()
	// user.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	user.UpdaterIDValidator = userDescUpdaterID.Validators[0].(func(int) error)
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = func() func(string) error {
		validators := userDescUsername.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(username string) error {
			for _, fn := range fns {
				if err := fn(username); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[1].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescNickname is the schema descriptor for nickname field.
	userDescNickname := userFields[2].Descriptor()
	// user.NicknameValidator is a validator for the "nickname" field. It is called by the builders before save.
	user.NicknameValidator = userDescNickname.Validators[0].(func(string) error)
	// userDescRealName is the schema descriptor for real_name field.
	userDescRealName := userFields[3].Descriptor()
	// user.RealNameValidator is a validator for the "real_name" field. It is called by the builders before save.
	user.RealNameValidator = userDescRealName.Validators[0].(func(string) error)
	// userDescMobile is the schema descriptor for mobile field.
	userDescMobile := userFields[4].Descriptor()
	// user.MobileValidator is a validator for the "mobile" field. It is called by the builders before save.
	user.MobileValidator = userDescMobile.Validators[0].(func(string) error)
	// userDescWechatOpenid is the schema descriptor for wechat_openid field.
	userDescWechatOpenid := userFields[5].Descriptor()
	// user.WechatOpenidValidator is a validator for the "wechat_openid" field. It is called by the builders before save.
	user.WechatOpenidValidator = userDescWechatOpenid.Validators[0].(func(string) error)
	// userDescUserStatus is the schema descriptor for user_status field.
	userDescUserStatus := userFields[7].Descriptor()
	// user.DefaultUserStatus holds the default value on creation for the user_status field.
	user.DefaultUserStatus = enums.EnabledStatus(userDescUserStatus.Default.(int))
	// user.UserStatusValidator is a validator for the "user_status" field. It is called by the builders before save.
	user.UserStatusValidator = userDescUserStatus.Validators[0].(func(int) error)
	videoMixin := schema.Video{}.Mixin()
	videoMixinHooks0 := videoMixin[0].Hooks()
	video.Hooks[0] = videoMixinHooks0[0]
	videoMixinFields0 := videoMixin[0].Fields()
	_ = videoMixinFields0
	videoFields := schema.Video{}.Fields()
	_ = videoFields
	// videoDescCreateTime is the schema descriptor for create_time field.
	videoDescCreateTime := videoMixinFields0[0].Descriptor()
	// video.DefaultCreateTime holds the default value on creation for the create_time field.
	video.DefaultCreateTime = videoDescCreateTime.Default.(func() time.Time)
	// videoDescCreatorID is the schema descriptor for creator_id field.
	videoDescCreatorID := videoMixinFields0[1].Descriptor()
	// video.CreatorIDValidator is a validator for the "creator_id" field. It is called by the builders before save.
	video.CreatorIDValidator = videoDescCreatorID.Validators[0].(func(int) error)
	// videoDescUpdaterID is the schema descriptor for updater_id field.
	videoDescUpdaterID := videoMixinFields0[3].Descriptor()
	// video.UpdaterIDValidator is a validator for the "updater_id" field. It is called by the builders before save.
	video.UpdaterIDValidator = videoDescUpdaterID.Validators[0].(func(int) error)
	// videoDescUpdateTime is the schema descriptor for update_time field.
	videoDescUpdateTime := videoMixinFields0[4].Descriptor()
	// video.DefaultUpdateTime holds the default value on creation for the update_time field.
	video.DefaultUpdateTime = videoDescUpdateTime.Default.(func() time.Time)
	// video.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	video.UpdateDefaultUpdateTime = videoDescUpdateTime.UpdateDefault.(func() time.Time)
	// videoDescSize is the schema descriptor for size field.
	videoDescSize := videoFields[2].Descriptor()
	// video.DefaultSize holds the default value on creation for the size field.
	video.DefaultSize = videoDescSize.Default.(int64)
}

const (
	Version = "v0.12.4"                                         // Version of ent codegen.
	Sum     = "h1:LddPnAyxls/O7DTXZvUGDj0NZIdGSu317+aoNLJWbD8=" // Sum of ent codegen.
)
