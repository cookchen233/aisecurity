// Code generated by ent, DO NOT EDIT.

package riskreporting

import (
	"aisecurity/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldDeletedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldCreatedBy, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldTitle, v))
}

// Content applies equality check predicate on the "content" field. It's identical to ContentEQ.
func Content(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldContent, v))
}

// RiskCategoryID applies equality check predicate on the "risk_category_id" field. It's identical to RiskCategoryIDEQ.
func RiskCategoryID(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldRiskCategoryID, v))
}

// RiskLocationID applies equality check predicate on the "risk_location_id" field. It's identical to RiskLocationIDEQ.
func RiskLocationID(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldRiskLocationID, v))
}

// Maintainer applies equality check predicate on the "maintainer" field. It's identical to MaintainerEQ.
func Maintainer(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldMaintainer, v))
}

// Measures applies equality check predicate on the "measures" field. It's identical to MeasuresEQ.
func Measures(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldMeasures, v))
}

// DueTime applies equality check predicate on the "due_time" field. It's identical to DueTimeEQ.
func DueTime(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldDueTime, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNotNull(FieldDeletedAt))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNotNull(FieldCreatedBy))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldContainsFold(FieldTitle, v))
}

// ContentEQ applies the EQ predicate on the "content" field.
func ContentEQ(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldContent, v))
}

// ContentNEQ applies the NEQ predicate on the "content" field.
func ContentNEQ(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNEQ(FieldContent, v))
}

// ContentIn applies the In predicate on the "content" field.
func ContentIn(vs ...string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldIn(FieldContent, vs...))
}

// ContentNotIn applies the NotIn predicate on the "content" field.
func ContentNotIn(vs ...string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNotIn(FieldContent, vs...))
}

// ContentGT applies the GT predicate on the "content" field.
func ContentGT(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGT(FieldContent, v))
}

// ContentGTE applies the GTE predicate on the "content" field.
func ContentGTE(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGTE(FieldContent, v))
}

// ContentLT applies the LT predicate on the "content" field.
func ContentLT(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLT(FieldContent, v))
}

// ContentLTE applies the LTE predicate on the "content" field.
func ContentLTE(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLTE(FieldContent, v))
}

// ContentContains applies the Contains predicate on the "content" field.
func ContentContains(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldContains(FieldContent, v))
}

// ContentHasPrefix applies the HasPrefix predicate on the "content" field.
func ContentHasPrefix(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldHasPrefix(FieldContent, v))
}

// ContentHasSuffix applies the HasSuffix predicate on the "content" field.
func ContentHasSuffix(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldHasSuffix(FieldContent, v))
}

// ContentEqualFold applies the EqualFold predicate on the "content" field.
func ContentEqualFold(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEqualFold(FieldContent, v))
}

// ContentContainsFold applies the ContainsFold predicate on the "content" field.
func ContentContainsFold(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldContainsFold(FieldContent, v))
}

// RiskCategoryIDEQ applies the EQ predicate on the "risk_category_id" field.
func RiskCategoryIDEQ(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldRiskCategoryID, v))
}

// RiskCategoryIDNEQ applies the NEQ predicate on the "risk_category_id" field.
func RiskCategoryIDNEQ(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNEQ(FieldRiskCategoryID, v))
}

// RiskCategoryIDIn applies the In predicate on the "risk_category_id" field.
func RiskCategoryIDIn(vs ...int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldIn(FieldRiskCategoryID, vs...))
}

// RiskCategoryIDNotIn applies the NotIn predicate on the "risk_category_id" field.
func RiskCategoryIDNotIn(vs ...int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNotIn(FieldRiskCategoryID, vs...))
}

// RiskCategoryIDGT applies the GT predicate on the "risk_category_id" field.
func RiskCategoryIDGT(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGT(FieldRiskCategoryID, v))
}

// RiskCategoryIDGTE applies the GTE predicate on the "risk_category_id" field.
func RiskCategoryIDGTE(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGTE(FieldRiskCategoryID, v))
}

// RiskCategoryIDLT applies the LT predicate on the "risk_category_id" field.
func RiskCategoryIDLT(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLT(FieldRiskCategoryID, v))
}

// RiskCategoryIDLTE applies the LTE predicate on the "risk_category_id" field.
func RiskCategoryIDLTE(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLTE(FieldRiskCategoryID, v))
}

// RiskLocationIDEQ applies the EQ predicate on the "risk_location_id" field.
func RiskLocationIDEQ(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldRiskLocationID, v))
}

// RiskLocationIDNEQ applies the NEQ predicate on the "risk_location_id" field.
func RiskLocationIDNEQ(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNEQ(FieldRiskLocationID, v))
}

// RiskLocationIDIn applies the In predicate on the "risk_location_id" field.
func RiskLocationIDIn(vs ...int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldIn(FieldRiskLocationID, vs...))
}

// RiskLocationIDNotIn applies the NotIn predicate on the "risk_location_id" field.
func RiskLocationIDNotIn(vs ...int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNotIn(FieldRiskLocationID, vs...))
}

// RiskLocationIDGT applies the GT predicate on the "risk_location_id" field.
func RiskLocationIDGT(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGT(FieldRiskLocationID, v))
}

// RiskLocationIDGTE applies the GTE predicate on the "risk_location_id" field.
func RiskLocationIDGTE(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGTE(FieldRiskLocationID, v))
}

// RiskLocationIDLT applies the LT predicate on the "risk_location_id" field.
func RiskLocationIDLT(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLT(FieldRiskLocationID, v))
}

// RiskLocationIDLTE applies the LTE predicate on the "risk_location_id" field.
func RiskLocationIDLTE(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLTE(FieldRiskLocationID, v))
}

// MaintainerEQ applies the EQ predicate on the "maintainer" field.
func MaintainerEQ(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldMaintainer, v))
}

// MaintainerNEQ applies the NEQ predicate on the "maintainer" field.
func MaintainerNEQ(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNEQ(FieldMaintainer, v))
}

// MaintainerIn applies the In predicate on the "maintainer" field.
func MaintainerIn(vs ...int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldIn(FieldMaintainer, vs...))
}

// MaintainerNotIn applies the NotIn predicate on the "maintainer" field.
func MaintainerNotIn(vs ...int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNotIn(FieldMaintainer, vs...))
}

// MaintainerGT applies the GT predicate on the "maintainer" field.
func MaintainerGT(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGT(FieldMaintainer, v))
}

// MaintainerGTE applies the GTE predicate on the "maintainer" field.
func MaintainerGTE(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGTE(FieldMaintainer, v))
}

// MaintainerLT applies the LT predicate on the "maintainer" field.
func MaintainerLT(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLT(FieldMaintainer, v))
}

// MaintainerLTE applies the LTE predicate on the "maintainer" field.
func MaintainerLTE(v int) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLTE(FieldMaintainer, v))
}

// MeasuresEQ applies the EQ predicate on the "measures" field.
func MeasuresEQ(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldMeasures, v))
}

// MeasuresNEQ applies the NEQ predicate on the "measures" field.
func MeasuresNEQ(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNEQ(FieldMeasures, v))
}

// MeasuresIn applies the In predicate on the "measures" field.
func MeasuresIn(vs ...string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldIn(FieldMeasures, vs...))
}

// MeasuresNotIn applies the NotIn predicate on the "measures" field.
func MeasuresNotIn(vs ...string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNotIn(FieldMeasures, vs...))
}

// MeasuresGT applies the GT predicate on the "measures" field.
func MeasuresGT(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGT(FieldMeasures, v))
}

// MeasuresGTE applies the GTE predicate on the "measures" field.
func MeasuresGTE(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGTE(FieldMeasures, v))
}

// MeasuresLT applies the LT predicate on the "measures" field.
func MeasuresLT(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLT(FieldMeasures, v))
}

// MeasuresLTE applies the LTE predicate on the "measures" field.
func MeasuresLTE(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLTE(FieldMeasures, v))
}

// MeasuresContains applies the Contains predicate on the "measures" field.
func MeasuresContains(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldContains(FieldMeasures, v))
}

// MeasuresHasPrefix applies the HasPrefix predicate on the "measures" field.
func MeasuresHasPrefix(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldHasPrefix(FieldMeasures, v))
}

// MeasuresHasSuffix applies the HasSuffix predicate on the "measures" field.
func MeasuresHasSuffix(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldHasSuffix(FieldMeasures, v))
}

// MeasuresIsNil applies the IsNil predicate on the "measures" field.
func MeasuresIsNil() predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldIsNull(FieldMeasures))
}

// MeasuresNotNil applies the NotNil predicate on the "measures" field.
func MeasuresNotNil() predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNotNull(FieldMeasures))
}

// MeasuresEqualFold applies the EqualFold predicate on the "measures" field.
func MeasuresEqualFold(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEqualFold(FieldMeasures, v))
}

// MeasuresContainsFold applies the ContainsFold predicate on the "measures" field.
func MeasuresContainsFold(v string) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldContainsFold(FieldMeasures, v))
}

// DueTimeEQ applies the EQ predicate on the "due_time" field.
func DueTimeEQ(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldEQ(FieldDueTime, v))
}

// DueTimeNEQ applies the NEQ predicate on the "due_time" field.
func DueTimeNEQ(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNEQ(FieldDueTime, v))
}

// DueTimeIn applies the In predicate on the "due_time" field.
func DueTimeIn(vs ...time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldIn(FieldDueTime, vs...))
}

// DueTimeNotIn applies the NotIn predicate on the "due_time" field.
func DueTimeNotIn(vs ...time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldNotIn(FieldDueTime, vs...))
}

// DueTimeGT applies the GT predicate on the "due_time" field.
func DueTimeGT(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGT(FieldDueTime, v))
}

// DueTimeGTE applies the GTE predicate on the "due_time" field.
func DueTimeGTE(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldGTE(FieldDueTime, v))
}

// DueTimeLT applies the LT predicate on the "due_time" field.
func DueTimeLT(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLT(FieldDueTime, v))
}

// DueTimeLTE applies the LTE predicate on the "due_time" field.
func DueTimeLTE(v time.Time) predicate.RiskReporting {
	return predicate.RiskReporting(sql.FieldLTE(FieldDueTime, v))
}

// HasAdminRiskReporting applies the HasEdge predicate on the "AdminRiskReporting" edge.
func HasAdminRiskReporting() predicate.RiskReporting {
	return predicate.RiskReporting(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, AdminRiskReportingTable, AdminRiskReportingColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasAdminRiskReportingWith applies the HasEdge predicate on the "AdminRiskReporting" edge with a given conditions (other predicates).
func HasAdminRiskReportingWith(preds ...predicate.Admin) predicate.RiskReporting {
	return predicate.RiskReporting(func(s *sql.Selector) {
		step := newAdminRiskReportingStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.RiskReporting) predicate.RiskReporting {
	return predicate.RiskReporting(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.RiskReporting) predicate.RiskReporting {
	return predicate.RiskReporting(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.RiskReporting) predicate.RiskReporting {
	return predicate.RiskReporting(sql.NotPredicates(p))
}
