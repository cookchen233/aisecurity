// Code generated by ent, DO NOT EDIT.

package ent

import (
	"aisecurity/ent/admin"
	"aisecurity/ent/risklocation"
	"aisecurity/ent/riskreporting"
	"aisecurity/ent/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	adminFields := schema.Admin{}.Fields()
	_ = adminFields
	// adminDescCreatedAt is the schema descriptor for created_at field.
	adminDescCreatedAt := adminFields[0].Descriptor()
	// admin.DefaultCreatedAt holds the default value on creation for the created_at field.
	admin.DefaultCreatedAt = adminDescCreatedAt.Default.(func() time.Time)
	// adminDescUpdatedAt is the schema descriptor for updated_at field.
	adminDescUpdatedAt := adminFields[1].Descriptor()
	// admin.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	admin.DefaultUpdatedAt = adminDescUpdatedAt.Default.(func() time.Time)
	// admin.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	admin.UpdateDefaultUpdatedAt = adminDescUpdatedAt.UpdateDefault.(func() time.Time)
	// adminDescCreatedBy is the schema descriptor for created_by field.
	adminDescCreatedBy := adminFields[3].Descriptor()
	// admin.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	admin.CreatedByValidator = adminDescCreatedBy.Validators[0].(func(int) error)
	// adminDescUsername is the schema descriptor for username field.
	adminDescUsername := adminFields[4].Descriptor()
	// admin.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	admin.UsernameValidator = adminDescUsername.Validators[0].(func(string) error)
	risklocationFields := schema.RiskLocation{}.Fields()
	_ = risklocationFields
	// risklocationDescCreatedAt is the schema descriptor for created_at field.
	risklocationDescCreatedAt := risklocationFields[0].Descriptor()
	// risklocation.DefaultCreatedAt holds the default value on creation for the created_at field.
	risklocation.DefaultCreatedAt = risklocationDescCreatedAt.Default.(func() time.Time)
	// risklocationDescUpdatedAt is the schema descriptor for updated_at field.
	risklocationDescUpdatedAt := risklocationFields[1].Descriptor()
	// risklocation.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	risklocation.DefaultUpdatedAt = risklocationDescUpdatedAt.Default.(func() time.Time)
	// risklocation.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	risklocation.UpdateDefaultUpdatedAt = risklocationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// risklocationDescTitle is the schema descriptor for title field.
	risklocationDescTitle := risklocationFields[3].Descriptor()
	// risklocation.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	risklocation.TitleValidator = risklocationDescTitle.Validators[0].(func(string) error)
	riskreportingFields := schema.RiskReporting{}.Fields()
	_ = riskreportingFields
	// riskreportingDescCreatedAt is the schema descriptor for created_at field.
	riskreportingDescCreatedAt := riskreportingFields[0].Descriptor()
	// riskreporting.DefaultCreatedAt holds the default value on creation for the created_at field.
	riskreporting.DefaultCreatedAt = riskreportingDescCreatedAt.Default.(func() time.Time)
	// riskreportingDescUpdatedAt is the schema descriptor for updated_at field.
	riskreportingDescUpdatedAt := riskreportingFields[1].Descriptor()
	// riskreporting.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	riskreporting.DefaultUpdatedAt = riskreportingDescUpdatedAt.Default.(func() time.Time)
	// riskreporting.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	riskreporting.UpdateDefaultUpdatedAt = riskreportingDescUpdatedAt.UpdateDefault.(func() time.Time)
	// riskreportingDescCreatedBy is the schema descriptor for created_by field.
	riskreportingDescCreatedBy := riskreportingFields[3].Descriptor()
	// riskreporting.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	riskreporting.CreatedByValidator = riskreportingDescCreatedBy.Validators[0].(func(int) error)
	// riskreportingDescTitle is the schema descriptor for title field.
	riskreportingDescTitle := riskreportingFields[4].Descriptor()
	// riskreporting.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	riskreporting.TitleValidator = riskreportingDescTitle.Validators[0].(func(string) error)
	// riskreportingDescRiskCategoryID is the schema descriptor for risk_category_id field.
	riskreportingDescRiskCategoryID := riskreportingFields[7].Descriptor()
	// riskreporting.RiskCategoryIDValidator is a validator for the "risk_category_id" field. It is called by the builders before save.
	riskreporting.RiskCategoryIDValidator = riskreportingDescRiskCategoryID.Validators[0].(func(int) error)
	// riskreportingDescRiskLocationID is the schema descriptor for risk_location_id field.
	riskreportingDescRiskLocationID := riskreportingFields[8].Descriptor()
	// riskreporting.RiskLocationIDValidator is a validator for the "risk_location_id" field. It is called by the builders before save.
	riskreporting.RiskLocationIDValidator = riskreportingDescRiskLocationID.Validators[0].(func(int) error)
	// riskreportingDescMaintainer is the schema descriptor for maintainer field.
	riskreportingDescMaintainer := riskreportingFields[9].Descriptor()
	// riskreporting.MaintainerValidator is a validator for the "maintainer" field. It is called by the builders before save.
	riskreporting.MaintainerValidator = riskreportingDescMaintainer.Validators[0].(func(int) error)
}
