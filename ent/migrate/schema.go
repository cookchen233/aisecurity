// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdminsColumns holds the columns for the "admins" table.
	AdminsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "username", Type: field.TypeString, Size: 64},
	}
	// AdminsTable holds the schema information for the "admins" table.
	AdminsTable = &schema.Table{
		Name:       "admins",
		Columns:    AdminsColumns,
		PrimaryKey: []*schema.Column{AdminsColumns[0]},
	}
	// DeptsColumns holds the columns for the "depts" table.
	DeptsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// DeptsTable holds the schema information for the "depts" table.
	DeptsTable = &schema.Table{
		Name:       "depts",
		Columns:    DeptsColumns,
		PrimaryKey: []*schema.Column{DeptsColumns[0]},
	}
	// DeptAdminsColumns holds the columns for the "dept_admins" table.
	DeptAdminsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// DeptAdminsTable holds the schema information for the "dept_admins" table.
	DeptAdminsTable = &schema.Table{
		Name:       "dept_admins",
		Columns:    DeptAdminsColumns,
		PrimaryKey: []*schema.Column{DeptAdminsColumns[0]},
	}
	// RiskCategoriesColumns holds the columns for the "risk_categories" table.
	RiskCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// RiskCategoriesTable holds the schema information for the "risk_categories" table.
	RiskCategoriesTable = &schema.Table{
		Name:       "risk_categories",
		Columns:    RiskCategoriesColumns,
		PrimaryKey: []*schema.Column{RiskCategoriesColumns[0]},
	}
	// RiskLocationsColumns holds the columns for the "risk_locations" table.
	RiskLocationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString, Size: 255},
	}
	// RiskLocationsTable holds the schema information for the "risk_locations" table.
	RiskLocationsTable = &schema.Table{
		Name:       "risk_locations",
		Columns:    RiskLocationsColumns,
		PrimaryKey: []*schema.Column{RiskLocationsColumns[0]},
	}
	// RiskReportingsColumns holds the columns for the "risk_reportings" table.
	RiskReportingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString, Size: 255},
		{Name: "content", Type: field.TypeString},
		{Name: "images", Type: field.TypeJSON},
		{Name: "risk_category_id", Type: field.TypeInt},
		{Name: "risk_location_id", Type: field.TypeInt},
		{Name: "maintainer", Type: field.TypeInt},
		{Name: "measures", Type: field.TypeString, Nullable: true},
		{Name: "due_time", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
	}
	// RiskReportingsTable holds the schema information for the "risk_reportings" table.
	RiskReportingsTable = &schema.Table{
		Name:       "risk_reportings",
		Columns:    RiskReportingsColumns,
		PrimaryKey: []*schema.Column{RiskReportingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "risk_reportings_admins_RiskReportingAdmin",
				Columns:    []*schema.Column{RiskReportingsColumns[12]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminsTable,
		DeptsTable,
		DeptAdminsTable,
		RiskCategoriesTable,
		RiskLocationsTable,
		RiskReportingsTable,
	}
)

func init() {
	RiskReportingsTable.ForeignKeys[0].RefTable = AdminsTable
}
